  error: subprocess-exited-with-error
  
  × Building wheel for SharedPubSub (pyproject.toml) did not run successfully.
  │ exit code: 1
  ╰─> [1709 lines of output]
      /tmp/pip-build-env-bagsv2bh/overlay/lib/python3.13/site-packages/setuptools/_distutils/extension.py:150: UserWarning: Unknown Extension options: 'cxx_std'
        warnings.warn(msg)
      running bdist_wheel
      running build
      running build_ext
      building 'SharedPubSub' extension
      x86_64-linux-gnu-g++ -fno-strict-overflow -Wsign-compare -DNDEBUG -g -O2 -Wall -fPIC -I/tmp/pip-build-env-bagsv2bh/overlay/lib/python3.13/site-packages/pybind11/include -I.. -I../util -I/home/foxtrot/Documents/Projects/SharedPubSub/venv/include -I/usr/include/python3.13 -c module.cpp -o build/temp.linux-x86_64-cpython-313/module.o
      In file included from module.cpp:4:
      ../SharedPubSub.hpp:776:22: warning: use of ‘auto’ in parameter declaration only available with ‘-std=c++20’ or ‘-fconcepts’
        776 |         bool do_push(auto&& t){
            |                      ^~~~
      In file included from module.cpp:6:
      ../util/Examples.h:11:14: error: declaration of ‘operator<=’ as non-function
         11 |         auto operator<=>(const ExampleClass&) const = default;
            |              ^~~~~~~~
      ../util/Examples.h:11:22: error: expected ‘;’ at end of member declaration
         11 |         auto operator<=>(const ExampleClass&) const = default;
            |                      ^~
            |                        ;
      ../util/Examples.h:11:24: error: expected unqualified-id before ‘>’ token
         11 |         auto operator<=>(const ExampleClass&) const = default;
            |                        ^
      ../util/Examples.h:12:14: error: defaulted ‘bool ExampleClass::operator==(const ExampleClass&) const’ only available with ‘-std=c++20’ or ‘-std=gnu++20’
         12 |         bool operator==(const ExampleClass&) const = default;
            |              ^~~~~~~~
      ../util/Examples.h:13:14: error: defaulted ‘bool ExampleClass::operator!=(const ExampleClass&) const’ only available with ‘-std=c++20’ or ‘-std=gnu++20’
         13 |         bool operator!=(const ExampleClass&) const = default;
            |              ^~~~~~~~
      ../SharedPubSub.hpp: In instantiation of ‘static shps::NotifiedQueue<typename shps::remove_atomic<T>::type>* shps::SharedMemoryManager<T>::createSharedQueue(std::string) [with T = bool; typename shps::remove_atomic<T>::type = bool; std::string = std::__cxx11::basic_string<char>]’:
      ../SharedPubSub.hpp:402:106:   required from ‘shps::NotifiedQueue<typename shps::remove_atomic<T>::type>* shps::Topic<T>::subscribe(std::string) [with T = bool; typename shps::remove_atomic<T>::type = bool; std::string = std::__cxx11::basic_string<char>]’
        402 |             NotifiedQueue<remove_atomic_t<T>>* pNotifiedQueue = SharedMemoryManager<T>::createSharedQueue(name);
            |                                                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~
      ../SharedPubSub.hpp:273:45:   required from ‘bool shps::Subscriber<T>::subscribe() [with T = bool]’
        273 |             notifiedQueue = topic->subscribe(subscriberName);
            |                             ~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
      module.cpp:82:27:   required from ‘void declare_pubsub(pybind11::module_&, const char*, const char*) [with T = bool]’
         82 |         .def("subscribe", &shps::Subscriber<T>::subscribe)
            |                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      module.cpp:123:5:   required from here
         93 |     declare_pubsub<T>(m, "Publisher_" name, "Subscriber_" name); \
            |     ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      ../SharedPubSub.hpp:484:48: warning: unused variable ‘notifiedQueue’ [-Wunused-variable]
        484 |             NotifiedQueue<remove_atomic_t<T>>* notifiedQueue = new(pNotifiedQueue)NotifiedQueue<remove_atomic_t<T>>; // Create a Queue in the shared memory space
            |                                                ^~~~~~~~~~~~~
      ../SharedPubSub.hpp: In instantiation of ‘static shps::NotifiedQueue<typename shps::remove_atomic<T>::type>* shps::SharedMemoryManager<T>::createSharedQueue(std::string) [with T = std::atomic<bool>; typename shps::remove_atomic<T>::type = bool; std::string = std::__cxx11::basic_string<char>]’:
      ../SharedPubSub.hpp:402:106:   required from ‘shps::NotifiedQueue<typename shps::remove_atomic<T>::type>* shps::Topic<T>::subscribe(std::string) [with T = std::atomic<bool>; typename shps::remove_atomic<T>::type = bool; std::string = std::__cxx11::basic_string<char>]’
        402 |             NotifiedQueue<remove_atomic_t<T>>* pNotifiedQueue = SharedMemoryManager<T>::createSharedQueue(name);
            |                                                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~
      ../SharedPubSub.hpp:273:45:   required from ‘bool shps::Subscriber<T>::subscribe() [with T = std::atomic<bool>]’
        273 |             notifiedQueue = topic->subscribe(subscriberName);
            |                             ~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
      module.cpp:82:27:   required from ‘void declare_pubsub(pybind11::module_&, const char*, const char*) [with T = std::atomic<bool>]’
         82 |         .def("subscribe", &shps::Subscriber<T>::subscribe)
            |                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      module.cpp:123:5:   required from here
         94 |     declare_pubsub<atomic<T>>(m, "Publisher_atomic_" name, "Subscriber_atomic_" name);
            |     ~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      ../SharedPubSub.hpp:484:48: warning: unused variable ‘notifiedQueue’ [-Wunused-variable]
        484 |             NotifiedQueue<remove_atomic_t<T>>* notifiedQueue = new(pNotifiedQueue)NotifiedQueue<remove_atomic_t<T>>; // Create a Queue in the shared memory space
            |                                                ^~~~~~~~~~~~~
      ../SharedPubSub.hpp: In instantiation of ‘static shps::NotifiedQueue<typename shps::remove_atomic<T>::type>* shps::SharedMemoryManager<T>::createSharedQueue(std::string) [with T = int; typename shps::remove_atomic<T>::type = int; std::string = std::__cxx11::basic_string<char>]’:
      ../SharedPubSub.hpp:402:106:   required from ‘shps::NotifiedQueue<typename shps::remove_atomic<T>::type>* shps::Topic<T>::subscribe(std::string) [with T = int; typename shps::remove_atomic<T>::type = int; std::string = std::__cxx11::basic_string<char>]’
        402 |             NotifiedQueue<remove_atomic_t<T>>* pNotifiedQueue = SharedMemoryManager<T>::createSharedQueue(name);
            |                                                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~
      ../SharedPubSub.hpp:273:45:   required from ‘bool shps::Subscriber<T>::subscribe() [with T = int]’
        273 |             notifiedQueue = topic->subscribe(subscriberName);
            |                             ~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
      module.cpp:82:27:   required from ‘void declare_pubsub(pybind11::module_&, const char*, const char*) [with T = int]’
         82 |         .def("subscribe", &shps::Subscriber<T>::subscribe)
            |                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      module.cpp:124:5:   required from here
         93 |     declare_pubsub<T>(m, "Publisher_" name, "Subscriber_" name); \
            |     ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      ../SharedPubSub.hpp:484:48: warning: unused variable ‘notifiedQueue’ [-Wunused-variable]
        484 |             NotifiedQueue<remove_atomic_t<T>>* notifiedQueue = new(pNotifiedQueue)NotifiedQueue<remove_atomic_t<T>>; // Create a Queue in the shared memory space
            |                                                ^~~~~~~~~~~~~
      ../SharedPubSub.hpp: In instantiation of ‘static shps::NotifiedQueue<typename shps::remove_atomic<T>::type>* shps::SharedMemoryManager<T>::createSharedQueue(std::string) [with T = std::atomic<int>; typename shps::remove_atomic<T>::type = int; std::string = std::__cxx11::basic_string<char>]’:
      ../SharedPubSub.hpp:402:106:   required from ‘shps::NotifiedQueue<typename shps::remove_atomic<T>::type>* shps::Topic<T>::subscribe(std::string) [with T = std::atomic<int>; typename shps::remove_atomic<T>::type = int; std::string = std::__cxx11::basic_string<char>]’
        402 |             NotifiedQueue<remove_atomic_t<T>>* pNotifiedQueue = SharedMemoryManager<T>::createSharedQueue(name);
            |                                                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~
      ../SharedPubSub.hpp:273:45:   required from ‘bool shps::Subscriber<T>::subscribe() [with T = std::atomic<int>]’
        273 |             notifiedQueue = topic->subscribe(subscriberName);
            |                             ~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
      module.cpp:82:27:   required from ‘void declare_pubsub(pybind11::module_&, const char*, const char*) [with T = std::atomic<int>]’
         82 |         .def("subscribe", &shps::Subscriber<T>::subscribe)
            |                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      module.cpp:124:5:   required from here
         94 |     declare_pubsub<atomic<T>>(m, "Publisher_atomic_" name, "Subscriber_atomic_" name);
            |     ~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      ../SharedPubSub.hpp:484:48: warning: unused variable ‘notifiedQueue’ [-Wunused-variable]
        484 |             NotifiedQueue<remove_atomic_t<T>>* notifiedQueue = new(pNotifiedQueue)NotifiedQueue<remove_atomic_t<T>>; // Create a Queue in the shared memory space
            |                                                ^~~~~~~~~~~~~
      ../SharedPubSub.hpp: In instantiation of ‘static shps::NotifiedQueue<typename shps::remove_atomic<T>::type>* shps::SharedMemoryManager<T>::createSharedQueue(std::string) [with T = unsigned int; typename shps::remove_atomic<T>::type = unsigned int; std::string = std::__cxx11::basic_string<char>]’:
      ../SharedPubSub.hpp:402:106:   required from ‘shps::NotifiedQueue<typename shps::remove_atomic<T>::type>* shps::Topic<T>::subscribe(std::string) [with T = unsigned int; typename shps::remove_atomic<T>::type = unsigned int; std::string = std::__cxx11::basic_string<char>]’
        402 |             NotifiedQueue<remove_atomic_t<T>>* pNotifiedQueue = SharedMemoryManager<T>::createSharedQueue(name);
            |                                                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~
      ../SharedPubSub.hpp:273:45:   required from ‘bool shps::Subscriber<T>::subscribe() [with T = unsigned int]’
        273 |             notifiedQueue = topic->subscribe(subscriberName);
            |                             ~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
      module.cpp:82:27:   required from ‘void declare_pubsub(pybind11::module_&, const char*, const char*) [with T = unsigned int]’
         82 |         .def("subscribe", &shps::Subscriber<T>::subscribe)
            |                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      module.cpp:125:5:   required from here
         93 |     declare_pubsub<T>(m, "Publisher_" name, "Subscriber_" name); \
            |     ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      ../SharedPubSub.hpp:484:48: warning: unused variable ‘notifiedQueue’ [-Wunused-variable]
        484 |             NotifiedQueue<remove_atomic_t<T>>* notifiedQueue = new(pNotifiedQueue)NotifiedQueue<remove_atomic_t<T>>; // Create a Queue in the shared memory space
            |                                                ^~~~~~~~~~~~~
      ../SharedPubSub.hpp: In instantiation of ‘static shps::NotifiedQueue<typename shps::remove_atomic<T>::type>* shps::SharedMemoryManager<T>::createSharedQueue(std::string) [with T = std::atomic<unsigned int>; typename shps::remove_atomic<T>::type = unsigned int; std::string = std::__cxx11::basic_string<char>]’:
      ../SharedPubSub.hpp:402:106:   required from ‘shps::NotifiedQueue<typename shps::remove_atomic<T>::type>* shps::Topic<T>::subscribe(std::string) [with T = std::atomic<unsigned int>; typename shps::remove_atomic<T>::type = unsigned int; std::string = std::__cxx11::basic_string<char>]’
        402 |             NotifiedQueue<remove_atomic_t<T>>* pNotifiedQueue = SharedMemoryManager<T>::createSharedQueue(name);
            |                                                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~
      ../SharedPubSub.hpp:273:45:   required from ‘bool shps::Subscriber<T>::subscribe() [with T = std::atomic<unsigned int>]’
        273 |             notifiedQueue = topic->subscribe(subscriberName);
            |                             ~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
      module.cpp:82:27:   required from ‘void declare_pubsub(pybind11::module_&, const char*, const char*) [with T = std::atomic<unsigned int>]’
         82 |         .def("subscribe", &shps::Subscriber<T>::subscribe)
            |                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      module.cpp:125:5:   required from here
         94 |     declare_pubsub<atomic<T>>(m, "Publisher_atomic_" name, "Subscriber_atomic_" name);
            |     ~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      ../SharedPubSub.hpp:484:48: warning: unused variable ‘notifiedQueue’ [-Wunused-variable]
        484 |             NotifiedQueue<remove_atomic_t<T>>* notifiedQueue = new(pNotifiedQueue)NotifiedQueue<remove_atomic_t<T>>; // Create a Queue in the shared memory space
            |                                                ^~~~~~~~~~~~~
      ../SharedPubSub.hpp: In instantiation of ‘static shps::NotifiedQueue<typename shps::remove_atomic<T>::type>* shps::SharedMemoryManager<T>::createSharedQueue(std::string) [with T = signed char; typename shps::remove_atomic<T>::type = signed char; std::string = std::__cxx11::basic_string<char>]’:
      ../SharedPubSub.hpp:402:106:   required from ‘shps::NotifiedQueue<typename shps::remove_atomic<T>::type>* shps::Topic<T>::subscribe(std::string) [with T = signed char; typename shps::remove_atomic<T>::type = signed char; std::string = std::__cxx11::basic_string<char>]’
        402 |             NotifiedQueue<remove_atomic_t<T>>* pNotifiedQueue = SharedMemoryManager<T>::createSharedQueue(name);
            |                                                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~
      ../SharedPubSub.hpp:273:45:   required from ‘bool shps::Subscriber<T>::subscribe() [with T = signed char]’
        273 |             notifiedQueue = topic->subscribe(subscriberName);
            |                             ~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
      module.cpp:82:27:   required from ‘void declare_pubsub(pybind11::module_&, const char*, const char*) [with T = signed char]’
         82 |         .def("subscribe", &shps::Subscriber<T>::subscribe)
            |                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      module.cpp:126:5:   required from here
         93 |     declare_pubsub<T>(m, "Publisher_" name, "Subscriber_" name); \
            |     ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      ../SharedPubSub.hpp:484:48: warning: unused variable ‘notifiedQueue’ [-Wunused-variable]
        484 |             NotifiedQueue<remove_atomic_t<T>>* notifiedQueue = new(pNotifiedQueue)NotifiedQueue<remove_atomic_t<T>>; // Create a Queue in the shared memory space
            |                                                ^~~~~~~~~~~~~
      ../SharedPubSub.hpp: In instantiation of ‘static shps::NotifiedQueue<typename shps::remove_atomic<T>::type>* shps::SharedMemoryManager<T>::createSharedQueue(std::string) [with T = std::atomic<signed char>; typename shps::remove_atomic<T>::type = signed char; std::string = std::__cxx11::basic_string<char>]’:
      ../SharedPubSub.hpp:402:106:   required from ‘shps::NotifiedQueue<typename shps::remove_atomic<T>::type>* shps::Topic<T>::subscribe(std::string) [with T = std::atomic<signed char>; typename shps::remove_atomic<T>::type = signed char; std::string = std::__cxx11::basic_string<char>]’
        402 |             NotifiedQueue<remove_atomic_t<T>>* pNotifiedQueue = SharedMemoryManager<T>::createSharedQueue(name);
            |                                                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~
      ../SharedPubSub.hpp:273:45:   required from ‘bool shps::Subscriber<T>::subscribe() [with T = std::atomic<signed char>]’
        273 |             notifiedQueue = topic->subscribe(subscriberName);
            |                             ~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
      module.cpp:82:27:   required from ‘void declare_pubsub(pybind11::module_&, const char*, const char*) [with T = std::atomic<signed char>]’
         82 |         .def("subscribe", &shps::Subscriber<T>::subscribe)
            |                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      module.cpp:126:5:   required from here
         94 |     declare_pubsub<atomic<T>>(m, "Publisher_atomic_" name, "Subscriber_atomic_" name);
            |     ~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      ../SharedPubSub.hpp:484:48: warning: unused variable ‘notifiedQueue’ [-Wunused-variable]
        484 |             NotifiedQueue<remove_atomic_t<T>>* notifiedQueue = new(pNotifiedQueue)NotifiedQueue<remove_atomic_t<T>>; // Create a Queue in the shared memory space
            |                                                ^~~~~~~~~~~~~
      ../SharedPubSub.hpp: In instantiation of ‘static shps::NotifiedQueue<typename shps::remove_atomic<T>::type>* shps::SharedMemoryManager<T>::createSharedQueue(std::string) [with T = unsigned char; typename shps::remove_atomic<T>::type = unsigned char; std::string = std::__cxx11::basic_string<char>]’:
      ../SharedPubSub.hpp:402:106:   required from ‘shps::NotifiedQueue<typename shps::remove_atomic<T>::type>* shps::Topic<T>::subscribe(std::string) [with T = unsigned char; typename shps::remove_atomic<T>::type = unsigned char; std::string = std::__cxx11::basic_string<char>]’
        402 |             NotifiedQueue<remove_atomic_t<T>>* pNotifiedQueue = SharedMemoryManager<T>::createSharedQueue(name);
            |                                                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~
      ../SharedPubSub.hpp:273:45:   required from ‘bool shps::Subscriber<T>::subscribe() [with T = unsigned char]’
        273 |             notifiedQueue = topic->subscribe(subscriberName);
            |                             ~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
      module.cpp:82:27:   required from ‘void declare_pubsub(pybind11::module_&, const char*, const char*) [with T = unsigned char]’
         82 |         .def("subscribe", &shps::Subscriber<T>::subscribe)
            |                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      module.cpp:127:5:   required from here
         93 |     declare_pubsub<T>(m, "Publisher_" name, "Subscriber_" name); \
            |     ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      ../SharedPubSub.hpp:484:48: warning: unused variable ‘notifiedQueue’ [-Wunused-variable]
        484 |             NotifiedQueue<remove_atomic_t<T>>* notifiedQueue = new(pNotifiedQueue)NotifiedQueue<remove_atomic_t<T>>; // Create a Queue in the shared memory space
            |                                                ^~~~~~~~~~~~~
      ../SharedPubSub.hpp: In instantiation of ‘static shps::NotifiedQueue<typename shps::remove_atomic<T>::type>* shps::SharedMemoryManager<T>::createSharedQueue(std::string) [with T = std::atomic<unsigned char>; typename shps::remove_atomic<T>::type = unsigned char; std::string = std::__cxx11::basic_string<char>]’:
      ../SharedPubSub.hpp:402:106:   required from ‘shps::NotifiedQueue<typename shps::remove_atomic<T>::type>* shps::Topic<T>::subscribe(std::string) [with T = std::atomic<unsigned char>; typename shps::remove_atomic<T>::type = unsigned char; std::string = std::__cxx11::basic_string<char>]’
        402 |             NotifiedQueue<remove_atomic_t<T>>* pNotifiedQueue = SharedMemoryManager<T>::createSharedQueue(name);
            |                                                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~
      ../SharedPubSub.hpp:273:45:   required from ‘bool shps::Subscriber<T>::subscribe() [with T = std::atomic<unsigned char>]’
        273 |             notifiedQueue = topic->subscribe(subscriberName);
            |                             ~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
      module.cpp:82:27:   required from ‘void declare_pubsub(pybind11::module_&, const char*, const char*) [with T = std::atomic<unsigned char>]’
         82 |         .def("subscribe", &shps::Subscriber<T>::subscribe)
            |                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      module.cpp:127:5:   required from here
         94 |     declare_pubsub<atomic<T>>(m, "Publisher_atomic_" name, "Subscriber_atomic_" name);
            |     ~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      ../SharedPubSub.hpp:484:48: warning: unused variable ‘notifiedQueue’ [-Wunused-variable]
        484 |             NotifiedQueue<remove_atomic_t<T>>* notifiedQueue = new(pNotifiedQueue)NotifiedQueue<remove_atomic_t<T>>; // Create a Queue in the shared memory space
            |                                                ^~~~~~~~~~~~~
      ../SharedPubSub.hpp: In instantiation of ‘static shps::NotifiedQueue<typename shps::remove_atomic<T>::type>* shps::SharedMemoryManager<T>::createSharedQueue(std::string) [with T = short int; typename shps::remove_atomic<T>::type = short int; std::string = std::__cxx11::basic_string<char>]’:
      ../SharedPubSub.hpp:402:106:   required from ‘shps::NotifiedQueue<typename shps::remove_atomic<T>::type>* shps::Topic<T>::subscribe(std::string) [with T = short int; typename shps::remove_atomic<T>::type = short int; std::string = std::__cxx11::basic_string<char>]’
        402 |             NotifiedQueue<remove_atomic_t<T>>* pNotifiedQueue = SharedMemoryManager<T>::createSharedQueue(name);
            |                                                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~
      ../SharedPubSub.hpp:273:45:   required from ‘bool shps::Subscriber<T>::subscribe() [with T = short int]’
        273 |             notifiedQueue = topic->subscribe(subscriberName);
            |                             ~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
      module.cpp:82:27:   required from ‘void declare_pubsub(pybind11::module_&, const char*, const char*) [with T = short int]’
         82 |         .def("subscribe", &shps::Subscriber<T>::subscribe)
            |                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      module.cpp:128:5:   required from here
         93 |     declare_pubsub<T>(m, "Publisher_" name, "Subscriber_" name); \
            |     ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      ../SharedPubSub.hpp:484:48: warning: unused variable ‘notifiedQueue’ [-Wunused-variable]
        484 |             NotifiedQueue<remove_atomic_t<T>>* notifiedQueue = new(pNotifiedQueue)NotifiedQueue<remove_atomic_t<T>>; // Create a Queue in the shared memory space
            |                                                ^~~~~~~~~~~~~
      ../SharedPubSub.hpp: In instantiation of ‘static shps::NotifiedQueue<typename shps::remove_atomic<T>::type>* shps::SharedMemoryManager<T>::createSharedQueue(std::string) [with T = std::atomic<short int>; typename shps::remove_atomic<T>::type = short int; std::string = std::__cxx11::basic_string<char>]’:
      ../SharedPubSub.hpp:402:106:   required from ‘shps::NotifiedQueue<typename shps::remove_atomic<T>::type>* shps::Topic<T>::subscribe(std::string) [with T = std::atomic<short int>; typename shps::remove_atomic<T>::type = short int; std::string = std::__cxx11::basic_string<char>]’
        402 |             NotifiedQueue<remove_atomic_t<T>>* pNotifiedQueue = SharedMemoryManager<T>::createSharedQueue(name);
            |                                                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~
      ../SharedPubSub.hpp:273:45:   required from ‘bool shps::Subscriber<T>::subscribe() [with T = std::atomic<short int>]’
        273 |             notifiedQueue = topic->subscribe(subscriberName);
            |                             ~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
      module.cpp:82:27:   required from ‘void declare_pubsub(pybind11::module_&, const char*, const char*) [with T = std::atomic<short int>]’
         82 |         .def("subscribe", &shps::Subscriber<T>::subscribe)
            |                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      module.cpp:128:5:   required from here
         94 |     declare_pubsub<atomic<T>>(m, "Publisher_atomic_" name, "Subscriber_atomic_" name);
            |     ~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      ../SharedPubSub.hpp:484:48: warning: unused variable ‘notifiedQueue’ [-Wunused-variable]
        484 |             NotifiedQueue<remove_atomic_t<T>>* notifiedQueue = new(pNotifiedQueue)NotifiedQueue<remove_atomic_t<T>>; // Create a Queue in the shared memory space
            |                                                ^~~~~~~~~~~~~
      ../SharedPubSub.hpp: In instantiation of ‘static shps::NotifiedQueue<typename shps::remove_atomic<T>::type>* shps::SharedMemoryManager<T>::createSharedQueue(std::string) [with T = short unsigned int; typename shps::remove_atomic<T>::type = short unsigned int; std::string = std::__cxx11::basic_string<char>]’:
      ../SharedPubSub.hpp:402:106:   required from ‘shps::NotifiedQueue<typename shps::remove_atomic<T>::type>* shps::Topic<T>::subscribe(std::string) [with T = short unsigned int; typename shps::remove_atomic<T>::type = short unsigned int; std::string = std::__cxx11::basic_string<char>]’
        402 |             NotifiedQueue<remove_atomic_t<T>>* pNotifiedQueue = SharedMemoryManager<T>::createSharedQueue(name);
            |                                                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~
      ../SharedPubSub.hpp:273:45:   required from ‘bool shps::Subscriber<T>::subscribe() [with T = short unsigned int]’
        273 |             notifiedQueue = topic->subscribe(subscriberName);
            |                             ~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
      module.cpp:82:27:   required from ‘void declare_pubsub(pybind11::module_&, const char*, const char*) [with T = short unsigned int]’
         82 |         .def("subscribe", &shps::Subscriber<T>::subscribe)
            |                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      module.cpp:129:5:   required from here
         93 |     declare_pubsub<T>(m, "Publisher_" name, "Subscriber_" name); \
            |     ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      ../SharedPubSub.hpp:484:48: warning: unused variable ‘notifiedQueue’ [-Wunused-variable]
        484 |             NotifiedQueue<remove_atomic_t<T>>* notifiedQueue = new(pNotifiedQueue)NotifiedQueue<remove_atomic_t<T>>; // Create a Queue in the shared memory space
            |                                                ^~~~~~~~~~~~~
      ../SharedPubSub.hpp: In instantiation of ‘static shps::NotifiedQueue<typename shps::remove_atomic<T>::type>* shps::SharedMemoryManager<T>::createSharedQueue(std::string) [with T = std::atomic<short unsigned int>; typename shps::remove_atomic<T>::type = short unsigned int; std::string = std::__cxx11::basic_string<char>]’:
      ../SharedPubSub.hpp:402:106:   required from ‘shps::NotifiedQueue<typename shps::remove_atomic<T>::type>* shps::Topic<T>::subscribe(std::string) [with T = std::atomic<short unsigned int>; typename shps::remove_atomic<T>::type = short unsigned int; std::string = std::__cxx11::basic_string<char>]’
        402 |             NotifiedQueue<remove_atomic_t<T>>* pNotifiedQueue = SharedMemoryManager<T>::createSharedQueue(name);
            |                                                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~
      ../SharedPubSub.hpp:273:45:   required from ‘bool shps::Subscriber<T>::subscribe() [with T = std::atomic<short unsigned int>]’
        273 |             notifiedQueue = topic->subscribe(subscriberName);
            |                             ~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
      module.cpp:82:27:   required from ‘void declare_pubsub(pybind11::module_&, const char*, const char*) [with T = std::atomic<short unsigned int>]’
         82 |         .def("subscribe", &shps::Subscriber<T>::subscribe)
            |                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      module.cpp:129:5:   required from here
         94 |     declare_pubsub<atomic<T>>(m, "Publisher_atomic_" name, "Subscriber_atomic_" name);
            |     ~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      ../SharedPubSub.hpp:484:48: warning: unused variable ‘notifiedQueue’ [-Wunused-variable]
        484 |             NotifiedQueue<remove_atomic_t<T>>* notifiedQueue = new(pNotifiedQueue)NotifiedQueue<remove_atomic_t<T>>; // Create a Queue in the shared memory space
            |                                                ^~~~~~~~~~~~~
      ../SharedPubSub.hpp: In instantiation of ‘static shps::NotifiedQueue<typename shps::remove_atomic<T>::type>* shps::SharedMemoryManager<T>::createSharedQueue(std::string) [with T = long int; typename shps::remove_atomic<T>::type = long int; std::string = std::__cxx11::basic_string<char>]’:
      ../SharedPubSub.hpp:402:106:   required from ‘shps::NotifiedQueue<typename shps::remove_atomic<T>::type>* shps::Topic<T>::subscribe(std::string) [with T = long int; typename shps::remove_atomic<T>::type = long int; std::string = std::__cxx11::basic_string<char>]’
        402 |             NotifiedQueue<remove_atomic_t<T>>* pNotifiedQueue = SharedMemoryManager<T>::createSharedQueue(name);
            |                                                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~
      ../SharedPubSub.hpp:273:45:   required from ‘bool shps::Subscriber<T>::subscribe() [with T = long int]’
        273 |             notifiedQueue = topic->subscribe(subscriberName);
            |                             ~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
      module.cpp:82:27:   required from ‘void declare_pubsub(pybind11::module_&, const char*, const char*) [with T = long int]’
         82 |         .def("subscribe", &shps::Subscriber<T>::subscribe)
            |                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      module.cpp:130:5:   required from here
         93 |     declare_pubsub<T>(m, "Publisher_" name, "Subscriber_" name); \
            |     ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      ../SharedPubSub.hpp:484:48: warning: unused variable ‘notifiedQueue’ [-Wunused-variable]
        484 |             NotifiedQueue<remove_atomic_t<T>>* notifiedQueue = new(pNotifiedQueue)NotifiedQueue<remove_atomic_t<T>>; // Create a Queue in the shared memory space
            |                                                ^~~~~~~~~~~~~
      ../SharedPubSub.hpp: In instantiation of ‘static shps::NotifiedQueue<typename shps::remove_atomic<T>::type>* shps::SharedMemoryManager<T>::createSharedQueue(std::string) [with T = std::atomic<long int>; typename shps::remove_atomic<T>::type = long int; std::string = std::__cxx11::basic_string<char>]’:
      ../SharedPubSub.hpp:402:106:   required from ‘shps::NotifiedQueue<typename shps::remove_atomic<T>::type>* shps::Topic<T>::subscribe(std::string) [with T = std::atomic<long int>; typename shps::remove_atomic<T>::type = long int; std::string = std::__cxx11::basic_string<char>]’
        402 |             NotifiedQueue<remove_atomic_t<T>>* pNotifiedQueue = SharedMemoryManager<T>::createSharedQueue(name);
            |                                                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~
      ../SharedPubSub.hpp:273:45:   required from ‘bool shps::Subscriber<T>::subscribe() [with T = std::atomic<long int>]’
        273 |             notifiedQueue = topic->subscribe(subscriberName);
            |                             ~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
      module.cpp:82:27:   required from ‘void declare_pubsub(pybind11::module_&, const char*, const char*) [with T = std::atomic<long int>]’
         82 |         .def("subscribe", &shps::Subscriber<T>::subscribe)
            |                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      module.cpp:130:5:   required from here
         94 |     declare_pubsub<atomic<T>>(m, "Publisher_atomic_" name, "Subscriber_atomic_" name);
            |     ~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      ../SharedPubSub.hpp:484:48: warning: unused variable ‘notifiedQueue’ [-Wunused-variable]
        484 |             NotifiedQueue<remove_atomic_t<T>>* notifiedQueue = new(pNotifiedQueue)NotifiedQueue<remove_atomic_t<T>>; // Create a Queue in the shared memory space
            |                                                ^~~~~~~~~~~~~
      ../SharedPubSub.hpp: In instantiation of ‘static shps::NotifiedQueue<typename shps::remove_atomic<T>::type>* shps::SharedMemoryManager<T>::createSharedQueue(std::string) [with T = long unsigned int; typename shps::remove_atomic<T>::type = long unsigned int; std::string = std::__cxx11::basic_string<char>]’:
      ../SharedPubSub.hpp:402:106:   required from ‘shps::NotifiedQueue<typename shps::remove_atomic<T>::type>* shps::Topic<T>::subscribe(std::string) [with T = long unsigned int; typename shps::remove_atomic<T>::type = long unsigned int; std::string = std::__cxx11::basic_string<char>]’
        402 |             NotifiedQueue<remove_atomic_t<T>>* pNotifiedQueue = SharedMemoryManager<T>::createSharedQueue(name);
            |                                                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~
      ../SharedPubSub.hpp:273:45:   required from ‘bool shps::Subscriber<T>::subscribe() [with T = long unsigned int]’
        273 |             notifiedQueue = topic->subscribe(subscriberName);
            |                             ~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
      module.cpp:82:27:   required from ‘void declare_pubsub(pybind11::module_&, const char*, const char*) [with T = long unsigned int]’
         82 |         .def("subscribe", &shps::Subscriber<T>::subscribe)
            |                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      module.cpp:131:5:   required from here
         93 |     declare_pubsub<T>(m, "Publisher_" name, "Subscriber_" name); \
            |     ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      ../SharedPubSub.hpp:484:48: warning: unused variable ‘notifiedQueue’ [-Wunused-variable]
        484 |             NotifiedQueue<remove_atomic_t<T>>* notifiedQueue = new(pNotifiedQueue)NotifiedQueue<remove_atomic_t<T>>; // Create a Queue in the shared memory space
            |                                                ^~~~~~~~~~~~~
      ../SharedPubSub.hpp: In instantiation of ‘static shps::NotifiedQueue<typename shps::remove_atomic<T>::type>* shps::SharedMemoryManager<T>::createSharedQueue(std::string) [with T = std::atomic<long unsigned int>; typename shps::remove_atomic<T>::type = long unsigned int; std::string = std::__cxx11::basic_string<char>]’:
      ../SharedPubSub.hpp:402:106:   required from ‘shps::NotifiedQueue<typename shps::remove_atomic<T>::type>* shps::Topic<T>::subscribe(std::string) [with T = std::atomic<long unsigned int>; typename shps::remove_atomic<T>::type = long unsigned int; std::string = std::__cxx11::basic_string<char>]’
        402 |             NotifiedQueue<remove_atomic_t<T>>* pNotifiedQueue = SharedMemoryManager<T>::createSharedQueue(name);
            |                                                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~
      ../SharedPubSub.hpp:273:45:   required from ‘bool shps::Subscriber<T>::subscribe() [with T = std::atomic<long unsigned int>]’
        273 |             notifiedQueue = topic->subscribe(subscriberName);
            |                             ~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
      module.cpp:82:27:   required from ‘void declare_pubsub(pybind11::module_&, const char*, const char*) [with T = std::atomic<long unsigned int>]’
         82 |         .def("subscribe", &shps::Subscriber<T>::subscribe)
            |                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      module.cpp:131:5:   required from here
         94 |     declare_pubsub<atomic<T>>(m, "Publisher_atomic_" name, "Subscriber_atomic_" name);
            |     ~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      ../SharedPubSub.hpp:484:48: warning: unused variable ‘notifiedQueue’ [-Wunused-variable]
        484 |             NotifiedQueue<remove_atomic_t<T>>* notifiedQueue = new(pNotifiedQueue)NotifiedQueue<remove_atomic_t<T>>; // Create a Queue in the shared memory space
            |                                                ^~~~~~~~~~~~~
      ../SharedPubSub.hpp: In instantiation of ‘static shps::NotifiedQueue<typename shps::remove_atomic<T>::type>* shps::SharedMemoryManager<T>::createSharedQueue(std::string) [with T = float; typename shps::remove_atomic<T>::type = float; std::string = std::__cxx11::basic_string<char>]’:
      ../SharedPubSub.hpp:402:106:   required from ‘shps::NotifiedQueue<typename shps::remove_atomic<T>::type>* shps::Topic<T>::subscribe(std::string) [with T = float; typename shps::remove_atomic<T>::type = float; std::string = std::__cxx11::basic_string<char>]’
        402 |             NotifiedQueue<remove_atomic_t<T>>* pNotifiedQueue = SharedMemoryManager<T>::createSharedQueue(name);
            |                                                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~
      ../SharedPubSub.hpp:273:45:   required from ‘bool shps::Subscriber<T>::subscribe() [with T = float]’
        273 |             notifiedQueue = topic->subscribe(subscriberName);
            |                             ~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
      module.cpp:82:27:   required from ‘void declare_pubsub(pybind11::module_&, const char*, const char*) [with T = float]’
         82 |         .def("subscribe", &shps::Subscriber<T>::subscribe)
            |                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      module.cpp:132:5:   required from here
         93 |     declare_pubsub<T>(m, "Publisher_" name, "Subscriber_" name); \
            |     ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      ../SharedPubSub.hpp:484:48: warning: unused variable ‘notifiedQueue’ [-Wunused-variable]
        484 |             NotifiedQueue<remove_atomic_t<T>>* notifiedQueue = new(pNotifiedQueue)NotifiedQueue<remove_atomic_t<T>>; // Create a Queue in the shared memory space
            |                                                ^~~~~~~~~~~~~
      ../SharedPubSub.hpp: In instantiation of ‘static shps::NotifiedQueue<typename shps::remove_atomic<T>::type>* shps::SharedMemoryManager<T>::createSharedQueue(std::string) [with T = std::atomic<float>; typename shps::remove_atomic<T>::type = float; std::string = std::__cxx11::basic_string<char>]’:
      ../SharedPubSub.hpp:402:106:   required from ‘shps::NotifiedQueue<typename shps::remove_atomic<T>::type>* shps::Topic<T>::subscribe(std::string) [with T = std::atomic<float>; typename shps::remove_atomic<T>::type = float; std::string = std::__cxx11::basic_string<char>]’
        402 |             NotifiedQueue<remove_atomic_t<T>>* pNotifiedQueue = SharedMemoryManager<T>::createSharedQueue(name);
            |                                                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~
      ../SharedPubSub.hpp:273:45:   required from ‘bool shps::Subscriber<T>::subscribe() [with T = std::atomic<float>]’
        273 |             notifiedQueue = topic->subscribe(subscriberName);
            |                             ~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
      module.cpp:82:27:   required from ‘void declare_pubsub(pybind11::module_&, const char*, const char*) [with T = std::atomic<float>]’
         82 |         .def("subscribe", &shps::Subscriber<T>::subscribe)
            |                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      module.cpp:132:5:   required from here
         94 |     declare_pubsub<atomic<T>>(m, "Publisher_atomic_" name, "Subscriber_atomic_" name);
            |     ~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      ../SharedPubSub.hpp:484:48: warning: unused variable ‘notifiedQueue’ [-Wunused-variable]
        484 |             NotifiedQueue<remove_atomic_t<T>>* notifiedQueue = new(pNotifiedQueue)NotifiedQueue<remove_atomic_t<T>>; // Create a Queue in the shared memory space
            |                                                ^~~~~~~~~~~~~
      ../SharedPubSub.hpp: In instantiation of ‘static shps::NotifiedQueue<typename shps::remove_atomic<T>::type>* shps::SharedMemoryManager<T>::createSharedQueue(std::string) [with T = double; typename shps::remove_atomic<T>::type = double; std::string = std::__cxx11::basic_string<char>]’:
      ../SharedPubSub.hpp:402:106:   required from ‘shps::NotifiedQueue<typename shps::remove_atomic<T>::type>* shps::Topic<T>::subscribe(std::string) [with T = double; typename shps::remove_atomic<T>::type = double; std::string = std::__cxx11::basic_string<char>]’
        402 |             NotifiedQueue<remove_atomic_t<T>>* pNotifiedQueue = SharedMemoryManager<T>::createSharedQueue(name);
            |                                                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~
      ../SharedPubSub.hpp:273:45:   required from ‘bool shps::Subscriber<T>::subscribe() [with T = double]’
        273 |             notifiedQueue = topic->subscribe(subscriberName);
            |                             ~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
      module.cpp:82:27:   required from ‘void declare_pubsub(pybind11::module_&, const char*, const char*) [with T = double]’
         82 |         .def("subscribe", &shps::Subscriber<T>::subscribe)
            |                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      module.cpp:133:5:   required from here
         93 |     declare_pubsub<T>(m, "Publisher_" name, "Subscriber_" name); \
            |     ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      ../SharedPubSub.hpp:484:48: warning: unused variable ‘notifiedQueue’ [-Wunused-variable]
        484 |             NotifiedQueue<remove_atomic_t<T>>* notifiedQueue = new(pNotifiedQueue)NotifiedQueue<remove_atomic_t<T>>; // Create a Queue in the shared memory space
            |                                                ^~~~~~~~~~~~~
      ../SharedPubSub.hpp: In instantiation of ‘static shps::NotifiedQueue<typename shps::remove_atomic<T>::type>* shps::SharedMemoryManager<T>::createSharedQueue(std::string) [with T = std::atomic<double>; typename shps::remove_atomic<T>::type = double; std::string = std::__cxx11::basic_string<char>]’:
      ../SharedPubSub.hpp:402:106:   required from ‘shps::NotifiedQueue<typename shps::remove_atomic<T>::type>* shps::Topic<T>::subscribe(std::string) [with T = std::atomic<double>; typename shps::remove_atomic<T>::type = double; std::string = std::__cxx11::basic_string<char>]’
        402 |             NotifiedQueue<remove_atomic_t<T>>* pNotifiedQueue = SharedMemoryManager<T>::createSharedQueue(name);
            |                                                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~
      ../SharedPubSub.hpp:273:45:   required from ‘bool shps::Subscriber<T>::subscribe() [with T = std::atomic<double>]’
        273 |             notifiedQueue = topic->subscribe(subscriberName);
            |                             ~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
      module.cpp:82:27:   required from ‘void declare_pubsub(pybind11::module_&, const char*, const char*) [with T = std::atomic<double>]’
         82 |         .def("subscribe", &shps::Subscriber<T>::subscribe)
            |                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      module.cpp:133:5:   required from here
         94 |     declare_pubsub<atomic<T>>(m, "Publisher_atomic_" name, "Subscriber_atomic_" name);
            |     ~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      ../SharedPubSub.hpp:484:48: warning: unused variable ‘notifiedQueue’ [-Wunused-variable]
        484 |             NotifiedQueue<remove_atomic_t<T>>* notifiedQueue = new(pNotifiedQueue)NotifiedQueue<remove_atomic_t<T>>; // Create a Queue in the shared memory space
            |                                                ^~~~~~~~~~~~~
      ../SharedPubSub.hpp: In instantiation of ‘static shps::NotifiedQueue<typename shps::remove_atomic<T>::type>* shps::SharedMemoryManager<T>::createSharedQueue(std::string) [with T = FixedString<2048>; typename shps::remove_atomic<T>::type = FixedString<2048>; std::string = std::__cxx11::basic_string<char>]’:
      ../SharedPubSub.hpp:402:106:   required from ‘shps::NotifiedQueue<typename shps::remove_atomic<T>::type>* shps::Topic<T>::subscribe(std::string) [with T = FixedString<2048>; typename shps::remove_atomic<T>::type = FixedString<2048>; std::string = std::__cxx11::basic_string<char>]’
        402 |             NotifiedQueue<remove_atomic_t<T>>* pNotifiedQueue = SharedMemoryManager<T>::createSharedQueue(name);
            |                                                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~
      ../SharedPubSub.hpp:273:45:   required from ‘bool shps::Subscriber<T>::subscribe() [with T = FixedString<2048>]’
        273 |             notifiedQueue = topic->subscribe(subscriberName);
            |                             ~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
      module.cpp:82:27:   required from ‘void declare_pubsub(pybind11::module_&, const char*, const char*) [with T = FixedString<2048>]’
         82 |         .def("subscribe", &shps::Subscriber<T>::subscribe)
            |                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      module.cpp:136:38:   required from here
        136 |     declare_pubsub<FixedString<2048>>(m, "Publisher_FixedString2048", "Subscriber_FixedString2048");
            |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      ../SharedPubSub.hpp:484:48: warning: unused variable ‘notifiedQueue’ [-Wunused-variable]
        484 |             NotifiedQueue<remove_atomic_t<T>>* notifiedQueue = new(pNotifiedQueue)NotifiedQueue<remove_atomic_t<T>>; // Create a Queue in the shared memory space
            |                                                ^~~~~~~~~~~~~
      ../SharedPubSub.hpp: In instantiation of ‘static shps::NotifiedQueue<typename shps::remove_atomic<T>::type>* shps::SharedMemoryManager<T>::createSharedQueue(std::string) [with T = ExampleClass; typename shps::remove_atomic<T>::type = ExampleClass; std::string = std::__cxx11::basic_string<char>]’:
      ../SharedPubSub.hpp:402:106:   required from ‘shps::NotifiedQueue<typename shps::remove_atomic<T>::type>* shps::Topic<T>::subscribe(std::string) [with T = ExampleClass; typename shps::remove_atomic<T>::type = ExampleClass; std::string = std::__cxx11::basic_string<char>]’
        402 |             NotifiedQueue<remove_atomic_t<T>>* pNotifiedQueue = SharedMemoryManager<T>::createSharedQueue(name);
            |                                                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~
      ../SharedPubSub.hpp:273:45:   required from ‘bool shps::Subscriber<T>::subscribe() [with T = ExampleClass]’
        273 |             notifiedQueue = topic->subscribe(subscriberName);
            |                             ~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
      module.cpp:82:27:   required from ‘void declare_pubsub(pybind11::module_&, const char*, const char*) [with T = ExampleClass]’
         82 |         .def("subscribe", &shps::Subscriber<T>::subscribe)
            |                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      module.cpp:137:33:   required from here
        137 |     declare_pubsub<ExampleClass>(m, "Publisher_ExampleClass", "Subscriber_ExampleClass");
            |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      ../SharedPubSub.hpp:484:48: warning: unused variable ‘notifiedQueue’ [-Wunused-variable]
        484 |             NotifiedQueue<remove_atomic_t<T>>* notifiedQueue = new(pNotifiedQueue)NotifiedQueue<remove_atomic_t<T>>; // Create a Queue in the shared memory space
            |                                                ^~~~~~~~~~~~~
      ../SharedPubSub.hpp: In instantiation of ‘shps::Publisher<T>::Publisher(std::string) [with T = bool; std::string = std::__cxx11::basic_string<char>]’:
      /tmp/pip-build-env-bagsv2bh/overlay/lib/python3.13/site-packages/pybind11/include/pybind11/detail/init.h:76:12:   required from ‘Class* pybind11::detail::initimpl::construct_or_initialize(Args&& ...) [with Class = shps::Publisher<bool>; Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}; typename std::enable_if<std::is_constructible<_Tp, _Args>::value, int>::type <anonymous> = 0]’
         76 |     return new Class(std::forward<Args>(args)...);
            |            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      /tmp/pip-build-env-bagsv2bh/overlay/lib/python3.13/site-packages/pybind11/include/pybind11/detail/init.h:208:70:   required from ‘static void pybind11::detail::initimpl::constructor<Args>::execute(Class&, const Extra& ...) [with Class = pybind11::class_<shps::Publisher<bool> >; Extra = {}; typename std::enable_if<(! Class::has_alias), int>::type <anonymous> = 0; Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}]’
        208 |                 v_h.value_ptr() = construct_or_initialize<Cpp<Class>>(std::forward<Args>(args)...);
            |                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      /tmp/pip-build-env-bagsv2bh/overlay/lib/python3.13/site-packages/pybind11/include/pybind11/pybind11.h:1659:21:   required from ‘pybind11::class_<type_, options>& pybind11::class_<type_, options>::def(const pybind11::detail::initimpl::constructor<Args ...>&, const Extra& ...) [with Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}; Extra = {}; type_ = shps::Publisher<bool>; options = {}]’
       1659 |         init.execute(*this, extra...);
            |         ~~~~~~~~~~~~^~~~~~~~~~~~~~~~~
      module.cpp:69:13:   required from ‘void declare_pubsub(pybind11::module_&, const char*, const char*) [with T = bool]’
         68 |     py::class_<shps::Publisher<T>>(m, pubname)
            |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
         69 |         .def(py::init<const std::string&>())
            |         ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      module.cpp:123:5:   required from here
         93 |     declare_pubsub<T>(m, "Publisher_" name, "Subscriber_" name); \
            |     ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      ../SharedPubSub.hpp:211:21: warning: ‘shps::Publisher<bool>::topicName’ will be initialized after [-Wreorder]
        211 |         std::string topicName;
            |                     ^~~~~~~~~
      ../SharedPubSub.hpp:115:56: warning:   base ‘shps::SharedMemoryManager<bool>’ [-Wreorder]
        115 |         : topicName(topicName_),SharedMemoryManager<T>(){
            |                                                        ^
      ../SharedPubSub.hpp:114:9: warning:   when initialized here [-Wreorder]
        114 |         Publisher(std::string topicName_)
            |         ^~~~~~~~~
      ../SharedPubSub.hpp: In instantiation of ‘shps::Subscriber<T>::Subscriber(std::string, std::string, bool) [with T = bool; std::string = std::__cxx11::basic_string<char>]’:
      /tmp/pip-build-env-bagsv2bh/overlay/lib/python3.13/site-packages/pybind11/include/pybind11/detail/init.h:76:12:   required from ‘Class* pybind11::detail::initimpl::construct_or_initialize(Args&& ...) [with Class = shps::Subscriber<bool>; Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool}; typename std::enable_if<std::is_constructible<_Tp, _Args>::value, int>::type <anonymous> = 0]’
         76 |     return new Class(std::forward<Args>(args)...);
            |            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      /tmp/pip-build-env-bagsv2bh/overlay/lib/python3.13/site-packages/pybind11/include/pybind11/detail/init.h:208:70:   required from ‘static void pybind11::detail::initimpl::constructor<Args>::execute(Class&, const Extra& ...) [with Class = pybind11::class_<shps::Subscriber<bool> >; Extra = {}; typename std::enable_if<(! Class::has_alias), int>::type <anonymous> = 0; Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool}]’
        208 |                 v_h.value_ptr() = construct_or_initialize<Cpp<Class>>(std::forward<Args>(args)...);
            |                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      /tmp/pip-build-env-bagsv2bh/overlay/lib/python3.13/site-packages/pybind11/include/pybind11/pybind11.h:1659:21:   required from ‘pybind11::class_<type_, options>& pybind11::class_<type_, options>::def(const pybind11::detail::initimpl::constructor<Args ...>&, const Extra& ...) [with Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool}; Extra = {}; type_ = shps::Subscriber<bool>; options = {}]’
       1659 |         init.execute(*this, extra...);
            |         ~~~~~~~~~~~~^~~~~~~~~~~~~~~~~
      module.cpp:81:13:   required from ‘void declare_pubsub(pybind11::module_&, const char*, const char*) [with T = bool]’
         80 |     py::class_<shps::Subscriber<T>>(m, subname)
            |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
         81 |         .def(py::init<const std::string&, const std::string&, bool>())
            |         ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      module.cpp:123:5:   required from here
         93 |     declare_pubsub<T>(m, "Publisher_" name, "Subscriber_" name); \
            |     ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      ../SharedPubSub.hpp:336:21: warning: ‘shps::Subscriber<bool>::subscriberName’ will be initialized after [-Wreorder]
        336 |         std::string subscriberName;
            |                     ^~~~~~~~~~~~~~
      ../SharedPubSub.hpp:254:86: warning:   base ‘shps::SharedMemoryManager<bool>’ [-Wreorder]
        254 |         topicName(topicName_),subscriberName(subscriberName_),SharedMemoryManager<T>(){
            |                                                                                      ^
      ../SharedPubSub.hpp:253:9: warning:   when initialized here [-Wreorder]
        253 |         Subscriber(std::string topicName_,std::string subscriberName_,bool doSubscribe = false) :
            |         ^~~~~~~~~~
      ../SharedPubSub.hpp: In instantiation of ‘shps::Publisher<T>::Publisher(std::string) [with T = std::atomic<bool>; std::string = std::__cxx11::basic_string<char>]’:
      /tmp/pip-build-env-bagsv2bh/overlay/lib/python3.13/site-packages/pybind11/include/pybind11/detail/init.h:76:12:   required from ‘Class* pybind11::detail::initimpl::construct_or_initialize(Args&& ...) [with Class = shps::Publisher<std::atomic<bool> >; Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}; typename std::enable_if<std::is_constructible<_Tp, _Args>::value, int>::type <anonymous> = 0]’
         76 |     return new Class(std::forward<Args>(args)...);
            |            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      /tmp/pip-build-env-bagsv2bh/overlay/lib/python3.13/site-packages/pybind11/include/pybind11/detail/init.h:208:70:   required from ‘static void pybind11::detail::initimpl::constructor<Args>::execute(Class&, const Extra& ...) [with Class = pybind11::class_<shps::Publisher<std::atomic<bool> > >; Extra = {}; typename std::enable_if<(! Class::has_alias), int>::type <anonymous> = 0; Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}]’
        208 |                 v_h.value_ptr() = construct_or_initialize<Cpp<Class>>(std::forward<Args>(args)...);
            |                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      /tmp/pip-build-env-bagsv2bh/overlay/lib/python3.13/site-packages/pybind11/include/pybind11/pybind11.h:1659:21:   required from ‘pybind11::class_<type_, options>& pybind11::class_<type_, options>::def(const pybind11::detail::initimpl::constructor<Args ...>&, const Extra& ...) [with Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}; Extra = {}; type_ = shps::Publisher<std::atomic<bool> >; options = {}]’
       1659 |         init.execute(*this, extra...);
            |         ~~~~~~~~~~~~^~~~~~~~~~~~~~~~~
      module.cpp:69:13:   required from ‘void declare_pubsub(pybind11::module_&, const char*, const char*) [with T = std::atomic<bool>]’
         68 |     py::class_<shps::Publisher<T>>(m, pubname)
            |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
         69 |         .def(py::init<const std::string&>())
            |         ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      module.cpp:123:5:   required from here
         94 |     declare_pubsub<atomic<T>>(m, "Publisher_atomic_" name, "Subscriber_atomic_" name);
            |     ~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      ../SharedPubSub.hpp:211:21: warning: ‘shps::Publisher<std::atomic<bool> >::topicName’ will be initialized after [-Wreorder]
        211 |         std::string topicName;
            |                     ^~~~~~~~~
      ../SharedPubSub.hpp:115:56: warning:   base ‘shps::SharedMemoryManager<std::atomic<bool> >’ [-Wreorder]
        115 |         : topicName(topicName_),SharedMemoryManager<T>(){
            |                                                        ^
      ../SharedPubSub.hpp:114:9: warning:   when initialized here [-Wreorder]
        114 |         Publisher(std::string topicName_)
            |         ^~~~~~~~~
      ../SharedPubSub.hpp: In instantiation of ‘shps::Subscriber<T>::Subscriber(std::string, std::string, bool) [with T = std::atomic<bool>; std::string = std::__cxx11::basic_string<char>]’:
      /tmp/pip-build-env-bagsv2bh/overlay/lib/python3.13/site-packages/pybind11/include/pybind11/detail/init.h:76:12:   required from ‘Class* pybind11::detail::initimpl::construct_or_initialize(Args&& ...) [with Class = shps::Subscriber<std::atomic<bool> >; Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool}; typename std::enable_if<std::is_constructible<_Tp, _Args>::value, int>::type <anonymous> = 0]’
         76 |     return new Class(std::forward<Args>(args)...);
            |            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      /tmp/pip-build-env-bagsv2bh/overlay/lib/python3.13/site-packages/pybind11/include/pybind11/detail/init.h:208:70:   required from ‘static void pybind11::detail::initimpl::constructor<Args>::execute(Class&, const Extra& ...) [with Class = pybind11::class_<shps::Subscriber<std::atomic<bool> > >; Extra = {}; typename std::enable_if<(! Class::has_alias), int>::type <anonymous> = 0; Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool}]’
        208 |                 v_h.value_ptr() = construct_or_initialize<Cpp<Class>>(std::forward<Args>(args)...);
            |                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      /tmp/pip-build-env-bagsv2bh/overlay/lib/python3.13/site-packages/pybind11/include/pybind11/pybind11.h:1659:21:   required from ‘pybind11::class_<type_, options>& pybind11::class_<type_, options>::def(const pybind11::detail::initimpl::constructor<Args ...>&, const Extra& ...) [with Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool}; Extra = {}; type_ = shps::Subscriber<std::atomic<bool> >; options = {}]’
       1659 |         init.execute(*this, extra...);
            |         ~~~~~~~~~~~~^~~~~~~~~~~~~~~~~
      module.cpp:81:13:   required from ‘void declare_pubsub(pybind11::module_&, const char*, const char*) [with T = std::atomic<bool>]’
         80 |     py::class_<shps::Subscriber<T>>(m, subname)
            |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
         81 |         .def(py::init<const std::string&, const std::string&, bool>())
            |         ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      module.cpp:123:5:   required from here
         94 |     declare_pubsub<atomic<T>>(m, "Publisher_atomic_" name, "Subscriber_atomic_" name);
            |     ~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      ../SharedPubSub.hpp:336:21: warning: ‘shps::Subscriber<std::atomic<bool> >::subscriberName’ will be initialized after [-Wreorder]
        336 |         std::string subscriberName;
            |                     ^~~~~~~~~~~~~~
      ../SharedPubSub.hpp:254:86: warning:   base ‘shps::SharedMemoryManager<std::atomic<bool> >’ [-Wreorder]
        254 |         topicName(topicName_),subscriberName(subscriberName_),SharedMemoryManager<T>(){
            |                                                                                      ^
      ../SharedPubSub.hpp:253:9: warning:   when initialized here [-Wreorder]
        253 |         Subscriber(std::string topicName_,std::string subscriberName_,bool doSubscribe = false) :
            |         ^~~~~~~~~~
      ../SharedPubSub.hpp: In instantiation of ‘shps::Publisher<T>::Publisher(std::string) [with T = int; std::string = std::__cxx11::basic_string<char>]’:
      /tmp/pip-build-env-bagsv2bh/overlay/lib/python3.13/site-packages/pybind11/include/pybind11/detail/init.h:76:12:   required from ‘Class* pybind11::detail::initimpl::construct_or_initialize(Args&& ...) [with Class = shps::Publisher<int>; Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}; typename std::enable_if<std::is_constructible<_Tp, _Args>::value, int>::type <anonymous> = 0]’
         76 |     return new Class(std::forward<Args>(args)...);
            |            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      /tmp/pip-build-env-bagsv2bh/overlay/lib/python3.13/site-packages/pybind11/include/pybind11/detail/init.h:208:70:   required from ‘static void pybind11::detail::initimpl::constructor<Args>::execute(Class&, const Extra& ...) [with Class = pybind11::class_<shps::Publisher<int> >; Extra = {}; typename std::enable_if<(! Class::has_alias), int>::type <anonymous> = 0; Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}]’
        208 |                 v_h.value_ptr() = construct_or_initialize<Cpp<Class>>(std::forward<Args>(args)...);
            |                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      /tmp/pip-build-env-bagsv2bh/overlay/lib/python3.13/site-packages/pybind11/include/pybind11/pybind11.h:1659:21:   required from ‘pybind11::class_<type_, options>& pybind11::class_<type_, options>::def(const pybind11::detail::initimpl::constructor<Args ...>&, const Extra& ...) [with Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}; Extra = {}; type_ = shps::Publisher<int>; options = {}]’
       1659 |         init.execute(*this, extra...);
            |         ~~~~~~~~~~~~^~~~~~~~~~~~~~~~~
      module.cpp:69:13:   required from ‘void declare_pubsub(pybind11::module_&, const char*, const char*) [with T = int]’
         68 |     py::class_<shps::Publisher<T>>(m, pubname)
            |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
         69 |         .def(py::init<const std::string&>())
            |         ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      module.cpp:124:5:   required from here
         93 |     declare_pubsub<T>(m, "Publisher_" name, "Subscriber_" name); \
            |     ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      ../SharedPubSub.hpp:211:21: warning: ‘shps::Publisher<int>::topicName’ will be initialized after [-Wreorder]
        211 |         std::string topicName;
            |                     ^~~~~~~~~
      ../SharedPubSub.hpp:115:56: warning:   base ‘shps::SharedMemoryManager<int>’ [-Wreorder]
        115 |         : topicName(topicName_),SharedMemoryManager<T>(){
            |                                                        ^
      ../SharedPubSub.hpp:114:9: warning:   when initialized here [-Wreorder]
        114 |         Publisher(std::string topicName_)
            |         ^~~~~~~~~
      ../SharedPubSub.hpp: In instantiation of ‘shps::Subscriber<T>::Subscriber(std::string, std::string, bool) [with T = int; std::string = std::__cxx11::basic_string<char>]’:
      /tmp/pip-build-env-bagsv2bh/overlay/lib/python3.13/site-packages/pybind11/include/pybind11/detail/init.h:76:12:   required from ‘Class* pybind11::detail::initimpl::construct_or_initialize(Args&& ...) [with Class = shps::Subscriber<int>; Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool}; typename std::enable_if<std::is_constructible<_Tp, _Args>::value, int>::type <anonymous> = 0]’
         76 |     return new Class(std::forward<Args>(args)...);
            |            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      /tmp/pip-build-env-bagsv2bh/overlay/lib/python3.13/site-packages/pybind11/include/pybind11/detail/init.h:208:70:   required from ‘static void pybind11::detail::initimpl::constructor<Args>::execute(Class&, const Extra& ...) [with Class = pybind11::class_<shps::Subscriber<int> >; Extra = {}; typename std::enable_if<(! Class::has_alias), int>::type <anonymous> = 0; Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool}]’
        208 |                 v_h.value_ptr() = construct_or_initialize<Cpp<Class>>(std::forward<Args>(args)...);
            |                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      /tmp/pip-build-env-bagsv2bh/overlay/lib/python3.13/site-packages/pybind11/include/pybind11/pybind11.h:1659:21:   required from ‘pybind11::class_<type_, options>& pybind11::class_<type_, options>::def(const pybind11::detail::initimpl::constructor<Args ...>&, const Extra& ...) [with Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool}; Extra = {}; type_ = shps::Subscriber<int>; options = {}]’
       1659 |         init.execute(*this, extra...);
            |         ~~~~~~~~~~~~^~~~~~~~~~~~~~~~~
      module.cpp:81:13:   required from ‘void declare_pubsub(pybind11::module_&, const char*, const char*) [with T = int]’
         80 |     py::class_<shps::Subscriber<T>>(m, subname)
            |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
         81 |         .def(py::init<const std::string&, const std::string&, bool>())
            |         ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      module.cpp:124:5:   required from here
         93 |     declare_pubsub<T>(m, "Publisher_" name, "Subscriber_" name); \
            |     ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      ../SharedPubSub.hpp:336:21: warning: ‘shps::Subscriber<int>::subscriberName’ will be initialized after [-Wreorder]
        336 |         std::string subscriberName;
            |                     ^~~~~~~~~~~~~~
      ../SharedPubSub.hpp:254:86: warning:   base ‘shps::SharedMemoryManager<int>’ [-Wreorder]
        254 |         topicName(topicName_),subscriberName(subscriberName_),SharedMemoryManager<T>(){
            |                                                                                      ^
      ../SharedPubSub.hpp:253:9: warning:   when initialized here [-Wreorder]
        253 |         Subscriber(std::string topicName_,std::string subscriberName_,bool doSubscribe = false) :
            |         ^~~~~~~~~~
      ../SharedPubSub.hpp: In instantiation of ‘shps::Publisher<T>::Publisher(std::string) [with T = std::atomic<int>; std::string = std::__cxx11::basic_string<char>]’:
      /tmp/pip-build-env-bagsv2bh/overlay/lib/python3.13/site-packages/pybind11/include/pybind11/detail/init.h:76:12:   required from ‘Class* pybind11::detail::initimpl::construct_or_initialize(Args&& ...) [with Class = shps::Publisher<std::atomic<int> >; Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}; typename std::enable_if<std::is_constructible<_Tp, _Args>::value, int>::type <anonymous> = 0]’
         76 |     return new Class(std::forward<Args>(args)...);
            |            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      /tmp/pip-build-env-bagsv2bh/overlay/lib/python3.13/site-packages/pybind11/include/pybind11/detail/init.h:208:70:   required from ‘static void pybind11::detail::initimpl::constructor<Args>::execute(Class&, const Extra& ...) [with Class = pybind11::class_<shps::Publisher<std::atomic<int> > >; Extra = {}; typename std::enable_if<(! Class::has_alias), int>::type <anonymous> = 0; Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}]’
        208 |                 v_h.value_ptr() = construct_or_initialize<Cpp<Class>>(std::forward<Args>(args)...);
            |                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      /tmp/pip-build-env-bagsv2bh/overlay/lib/python3.13/site-packages/pybind11/include/pybind11/pybind11.h:1659:21:   required from ‘pybind11::class_<type_, options>& pybind11::class_<type_, options>::def(const pybind11::detail::initimpl::constructor<Args ...>&, const Extra& ...) [with Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}; Extra = {}; type_ = shps::Publisher<std::atomic<int> >; options = {}]’
       1659 |         init.execute(*this, extra...);
            |         ~~~~~~~~~~~~^~~~~~~~~~~~~~~~~
      module.cpp:69:13:   required from ‘void declare_pubsub(pybind11::module_&, const char*, const char*) [with T = std::atomic<int>]’
         68 |     py::class_<shps::Publisher<T>>(m, pubname)
            |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
         69 |         .def(py::init<const std::string&>())
            |         ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      module.cpp:124:5:   required from here
         94 |     declare_pubsub<atomic<T>>(m, "Publisher_atomic_" name, "Subscriber_atomic_" name);
            |     ~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      ../SharedPubSub.hpp:211:21: warning: ‘shps::Publisher<std::atomic<int> >::topicName’ will be initialized after [-Wreorder]
        211 |         std::string topicName;
            |                     ^~~~~~~~~
      ../SharedPubSub.hpp:115:56: warning:   base ‘shps::SharedMemoryManager<std::atomic<int> >’ [-Wreorder]
        115 |         : topicName(topicName_),SharedMemoryManager<T>(){
            |                                                        ^
      ../SharedPubSub.hpp:114:9: warning:   when initialized here [-Wreorder]
        114 |         Publisher(std::string topicName_)
            |         ^~~~~~~~~
      ../SharedPubSub.hpp: In instantiation of ‘shps::Subscriber<T>::Subscriber(std::string, std::string, bool) [with T = std::atomic<int>; std::string = std::__cxx11::basic_string<char>]’:
      /tmp/pip-build-env-bagsv2bh/overlay/lib/python3.13/site-packages/pybind11/include/pybind11/detail/init.h:76:12:   required from ‘Class* pybind11::detail::initimpl::construct_or_initialize(Args&& ...) [with Class = shps::Subscriber<std::atomic<int> >; Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool}; typename std::enable_if<std::is_constructible<_Tp, _Args>::value, int>::type <anonymous> = 0]’
         76 |     return new Class(std::forward<Args>(args)...);
            |            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      /tmp/pip-build-env-bagsv2bh/overlay/lib/python3.13/site-packages/pybind11/include/pybind11/detail/init.h:208:70:   required from ‘static void pybind11::detail::initimpl::constructor<Args>::execute(Class&, const Extra& ...) [with Class = pybind11::class_<shps::Subscriber<std::atomic<int> > >; Extra = {}; typename std::enable_if<(! Class::has_alias), int>::type <anonymous> = 0; Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool}]’
        208 |                 v_h.value_ptr() = construct_or_initialize<Cpp<Class>>(std::forward<Args>(args)...);
            |                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      /tmp/pip-build-env-bagsv2bh/overlay/lib/python3.13/site-packages/pybind11/include/pybind11/pybind11.h:1659:21:   required from ‘pybind11::class_<type_, options>& pybind11::class_<type_, options>::def(const pybind11::detail::initimpl::constructor<Args ...>&, const Extra& ...) [with Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool}; Extra = {}; type_ = shps::Subscriber<std::atomic<int> >; options = {}]’
       1659 |         init.execute(*this, extra...);
            |         ~~~~~~~~~~~~^~~~~~~~~~~~~~~~~
      module.cpp:81:13:   required from ‘void declare_pubsub(pybind11::module_&, const char*, const char*) [with T = std::atomic<int>]’
         80 |     py::class_<shps::Subscriber<T>>(m, subname)
            |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
         81 |         .def(py::init<const std::string&, const std::string&, bool>())
            |         ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      module.cpp:124:5:   required from here
         94 |     declare_pubsub<atomic<T>>(m, "Publisher_atomic_" name, "Subscriber_atomic_" name);
            |     ~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      ../SharedPubSub.hpp:336:21: warning: ‘shps::Subscriber<std::atomic<int> >::subscriberName’ will be initialized after [-Wreorder]
        336 |         std::string subscriberName;
            |                     ^~~~~~~~~~~~~~
      ../SharedPubSub.hpp:254:86: warning:   base ‘shps::SharedMemoryManager<std::atomic<int> >’ [-Wreorder]
        254 |         topicName(topicName_),subscriberName(subscriberName_),SharedMemoryManager<T>(){
            |                                                                                      ^
      ../SharedPubSub.hpp:253:9: warning:   when initialized here [-Wreorder]
        253 |         Subscriber(std::string topicName_,std::string subscriberName_,bool doSubscribe = false) :
            |         ^~~~~~~~~~
      ../SharedPubSub.hpp: In instantiation of ‘shps::Publisher<T>::Publisher(std::string) [with T = unsigned int; std::string = std::__cxx11::basic_string<char>]’:
      /tmp/pip-build-env-bagsv2bh/overlay/lib/python3.13/site-packages/pybind11/include/pybind11/detail/init.h:76:12:   required from ‘Class* pybind11::detail::initimpl::construct_or_initialize(Args&& ...) [with Class = shps::Publisher<unsigned int>; Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}; typename std::enable_if<std::is_constructible<_Tp, _Args>::value, int>::type <anonymous> = 0]’
         76 |     return new Class(std::forward<Args>(args)...);
            |            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      /tmp/pip-build-env-bagsv2bh/overlay/lib/python3.13/site-packages/pybind11/include/pybind11/detail/init.h:208:70:   required from ‘static void pybind11::detail::initimpl::constructor<Args>::execute(Class&, const Extra& ...) [with Class = pybind11::class_<shps::Publisher<unsigned int> >; Extra = {}; typename std::enable_if<(! Class::has_alias), int>::type <anonymous> = 0; Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}]’
        208 |                 v_h.value_ptr() = construct_or_initialize<Cpp<Class>>(std::forward<Args>(args)...);
            |                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      /tmp/pip-build-env-bagsv2bh/overlay/lib/python3.13/site-packages/pybind11/include/pybind11/pybind11.h:1659:21:   required from ‘pybind11::class_<type_, options>& pybind11::class_<type_, options>::def(const pybind11::detail::initimpl::constructor<Args ...>&, const Extra& ...) [with Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}; Extra = {}; type_ = shps::Publisher<unsigned int>; options = {}]’
       1659 |         init.execute(*this, extra...);
            |         ~~~~~~~~~~~~^~~~~~~~~~~~~~~~~
      module.cpp:69:13:   required from ‘void declare_pubsub(pybind11::module_&, const char*, const char*) [with T = unsigned int]’
         68 |     py::class_<shps::Publisher<T>>(m, pubname)
            |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
         69 |         .def(py::init<const std::string&>())
            |         ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      module.cpp:125:5:   required from here
         93 |     declare_pubsub<T>(m, "Publisher_" name, "Subscriber_" name); \
            |     ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      ../SharedPubSub.hpp:211:21: warning: ‘shps::Publisher<unsigned int>::topicName’ will be initialized after [-Wreorder]
        211 |         std::string topicName;
            |                     ^~~~~~~~~
      ../SharedPubSub.hpp:115:56: warning:   base ‘shps::SharedMemoryManager<unsigned int>’ [-Wreorder]
        115 |         : topicName(topicName_),SharedMemoryManager<T>(){
            |                                                        ^
      ../SharedPubSub.hpp:114:9: warning:   when initialized here [-Wreorder]
        114 |         Publisher(std::string topicName_)
            |         ^~~~~~~~~
      ../SharedPubSub.hpp: In instantiation of ‘shps::Subscriber<T>::Subscriber(std::string, std::string, bool) [with T = unsigned int; std::string = std::__cxx11::basic_string<char>]’:
      /tmp/pip-build-env-bagsv2bh/overlay/lib/python3.13/site-packages/pybind11/include/pybind11/detail/init.h:76:12:   required from ‘Class* pybind11::detail::initimpl::construct_or_initialize(Args&& ...) [with Class = shps::Subscriber<unsigned int>; Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool}; typename std::enable_if<std::is_constructible<_Tp, _Args>::value, int>::type <anonymous> = 0]’
         76 |     return new Class(std::forward<Args>(args)...);
            |            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      /tmp/pip-build-env-bagsv2bh/overlay/lib/python3.13/site-packages/pybind11/include/pybind11/detail/init.h:208:70:   required from ‘static void pybind11::detail::initimpl::constructor<Args>::execute(Class&, const Extra& ...) [with Class = pybind11::class_<shps::Subscriber<unsigned int> >; Extra = {}; typename std::enable_if<(! Class::has_alias), int>::type <anonymous> = 0; Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool}]’
        208 |                 v_h.value_ptr() = construct_or_initialize<Cpp<Class>>(std::forward<Args>(args)...);
            |                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      /tmp/pip-build-env-bagsv2bh/overlay/lib/python3.13/site-packages/pybind11/include/pybind11/pybind11.h:1659:21:   required from ‘pybind11::class_<type_, options>& pybind11::class_<type_, options>::def(const pybind11::detail::initimpl::constructor<Args ...>&, const Extra& ...) [with Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool}; Extra = {}; type_ = shps::Subscriber<unsigned int>; options = {}]’
       1659 |         init.execute(*this, extra...);
            |         ~~~~~~~~~~~~^~~~~~~~~~~~~~~~~
      module.cpp:81:13:   required from ‘void declare_pubsub(pybind11::module_&, const char*, const char*) [with T = unsigned int]’
         80 |     py::class_<shps::Subscriber<T>>(m, subname)
            |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
         81 |         .def(py::init<const std::string&, const std::string&, bool>())
            |         ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      module.cpp:125:5:   required from here
         93 |     declare_pubsub<T>(m, "Publisher_" name, "Subscriber_" name); \
            |     ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      ../SharedPubSub.hpp:336:21: warning: ‘shps::Subscriber<unsigned int>::subscriberName’ will be initialized after [-Wreorder]
        336 |         std::string subscriberName;
            |                     ^~~~~~~~~~~~~~
      ../SharedPubSub.hpp:254:86: warning:   base ‘shps::SharedMemoryManager<unsigned int>’ [-Wreorder]
        254 |         topicName(topicName_),subscriberName(subscriberName_),SharedMemoryManager<T>(){
            |                                                                                      ^
      ../SharedPubSub.hpp:253:9: warning:   when initialized here [-Wreorder]
        253 |         Subscriber(std::string topicName_,std::string subscriberName_,bool doSubscribe = false) :
            |         ^~~~~~~~~~
      ../SharedPubSub.hpp: In instantiation of ‘shps::Publisher<T>::Publisher(std::string) [with T = std::atomic<unsigned int>; std::string = std::__cxx11::basic_string<char>]’:
      /tmp/pip-build-env-bagsv2bh/overlay/lib/python3.13/site-packages/pybind11/include/pybind11/detail/init.h:76:12:   required from ‘Class* pybind11::detail::initimpl::construct_or_initialize(Args&& ...) [with Class = shps::Publisher<std::atomic<unsigned int> >; Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}; typename std::enable_if<std::is_constructible<_Tp, _Args>::value, int>::type <anonymous> = 0]’
         76 |     return new Class(std::forward<Args>(args)...);
            |            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      /tmp/pip-build-env-bagsv2bh/overlay/lib/python3.13/site-packages/pybind11/include/pybind11/detail/init.h:208:70:   required from ‘static void pybind11::detail::initimpl::constructor<Args>::execute(Class&, const Extra& ...) [with Class = pybind11::class_<shps::Publisher<std::atomic<unsigned int> > >; Extra = {}; typename std::enable_if<(! Class::has_alias), int>::type <anonymous> = 0; Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}]’
        208 |                 v_h.value_ptr() = construct_or_initialize<Cpp<Class>>(std::forward<Args>(args)...);
            |                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      /tmp/pip-build-env-bagsv2bh/overlay/lib/python3.13/site-packages/pybind11/include/pybind11/pybind11.h:1659:21:   required from ‘pybind11::class_<type_, options>& pybind11::class_<type_, options>::def(const pybind11::detail::initimpl::constructor<Args ...>&, const Extra& ...) [with Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}; Extra = {}; type_ = shps::Publisher<std::atomic<unsigned int> >; options = {}]’
       1659 |         init.execute(*this, extra...);
            |         ~~~~~~~~~~~~^~~~~~~~~~~~~~~~~
      module.cpp:69:13:   required from ‘void declare_pubsub(pybind11::module_&, const char*, const char*) [with T = std::atomic<unsigned int>]’
         68 |     py::class_<shps::Publisher<T>>(m, pubname)
            |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
         69 |         .def(py::init<const std::string&>())
            |         ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      module.cpp:125:5:   required from here
         94 |     declare_pubsub<atomic<T>>(m, "Publisher_atomic_" name, "Subscriber_atomic_" name);
            |     ~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      ../SharedPubSub.hpp:211:21: warning: ‘shps::Publisher<std::atomic<unsigned int> >::topicName’ will be initialized after [-Wreorder]
        211 |         std::string topicName;
            |                     ^~~~~~~~~
      ../SharedPubSub.hpp:115:56: warning:   base ‘shps::SharedMemoryManager<std::atomic<unsigned int> >’ [-Wreorder]
        115 |         : topicName(topicName_),SharedMemoryManager<T>(){
            |                                                        ^
      ../SharedPubSub.hpp:114:9: warning:   when initialized here [-Wreorder]
        114 |         Publisher(std::string topicName_)
            |         ^~~~~~~~~
      ../SharedPubSub.hpp: In instantiation of ‘shps::Subscriber<T>::Subscriber(std::string, std::string, bool) [with T = std::atomic<unsigned int>; std::string = std::__cxx11::basic_string<char>]’:
      /tmp/pip-build-env-bagsv2bh/overlay/lib/python3.13/site-packages/pybind11/include/pybind11/detail/init.h:76:12:   required from ‘Class* pybind11::detail::initimpl::construct_or_initialize(Args&& ...) [with Class = shps::Subscriber<std::atomic<unsigned int> >; Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool}; typename std::enable_if<std::is_constructible<_Tp, _Args>::value, int>::type <anonymous> = 0]’
         76 |     return new Class(std::forward<Args>(args)...);
            |            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      /tmp/pip-build-env-bagsv2bh/overlay/lib/python3.13/site-packages/pybind11/include/pybind11/detail/init.h:208:70:   required from ‘static void pybind11::detail::initimpl::constructor<Args>::execute(Class&, const Extra& ...) [with Class = pybind11::class_<shps::Subscriber<std::atomic<unsigned int> > >; Extra = {}; typename std::enable_if<(! Class::has_alias), int>::type <anonymous> = 0; Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool}]’
        208 |                 v_h.value_ptr() = construct_or_initialize<Cpp<Class>>(std::forward<Args>(args)...);
            |                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      /tmp/pip-build-env-bagsv2bh/overlay/lib/python3.13/site-packages/pybind11/include/pybind11/pybind11.h:1659:21:   required from ‘pybind11::class_<type_, options>& pybind11::class_<type_, options>::def(const pybind11::detail::initimpl::constructor<Args ...>&, const Extra& ...) [with Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool}; Extra = {}; type_ = shps::Subscriber<std::atomic<unsigned int> >; options = {}]’
       1659 |         init.execute(*this, extra...);
            |         ~~~~~~~~~~~~^~~~~~~~~~~~~~~~~
      module.cpp:81:13:   required from ‘void declare_pubsub(pybind11::module_&, const char*, const char*) [with T = std::atomic<unsigned int>]’
         80 |     py::class_<shps::Subscriber<T>>(m, subname)
            |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
         81 |         .def(py::init<const std::string&, const std::string&, bool>())
            |         ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      module.cpp:125:5:   required from here
         94 |     declare_pubsub<atomic<T>>(m, "Publisher_atomic_" name, "Subscriber_atomic_" name);
            |     ~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      ../SharedPubSub.hpp:336:21: warning: ‘shps::Subscriber<std::atomic<unsigned int> >::subscriberName’ will be initialized after [-Wreorder]
        336 |         std::string subscriberName;
            |                     ^~~~~~~~~~~~~~
      ../SharedPubSub.hpp:254:86: warning:   base ‘shps::SharedMemoryManager<std::atomic<unsigned int> >’ [-Wreorder]
        254 |         topicName(topicName_),subscriberName(subscriberName_),SharedMemoryManager<T>(){
            |                                                                                      ^
      ../SharedPubSub.hpp:253:9: warning:   when initialized here [-Wreorder]
        253 |         Subscriber(std::string topicName_,std::string subscriberName_,bool doSubscribe = false) :
            |         ^~~~~~~~~~
      ../SharedPubSub.hpp: In instantiation of ‘shps::Publisher<T>::Publisher(std::string) [with T = signed char; std::string = std::__cxx11::basic_string<char>]’:
      /tmp/pip-build-env-bagsv2bh/overlay/lib/python3.13/site-packages/pybind11/include/pybind11/detail/init.h:76:12:   required from ‘Class* pybind11::detail::initimpl::construct_or_initialize(Args&& ...) [with Class = shps::Publisher<signed char>; Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}; typename std::enable_if<std::is_constructible<_Tp, _Args>::value, int>::type <anonymous> = 0]’
         76 |     return new Class(std::forward<Args>(args)...);
            |            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      /tmp/pip-build-env-bagsv2bh/overlay/lib/python3.13/site-packages/pybind11/include/pybind11/detail/init.h:208:70:   required from ‘static void pybind11::detail::initimpl::constructor<Args>::execute(Class&, const Extra& ...) [with Class = pybind11::class_<shps::Publisher<signed char> >; Extra = {}; typename std::enable_if<(! Class::has_alias), int>::type <anonymous> = 0; Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}]’
        208 |                 v_h.value_ptr() = construct_or_initialize<Cpp<Class>>(std::forward<Args>(args)...);
            |                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      /tmp/pip-build-env-bagsv2bh/overlay/lib/python3.13/site-packages/pybind11/include/pybind11/pybind11.h:1659:21:   required from ‘pybind11::class_<type_, options>& pybind11::class_<type_, options>::def(const pybind11::detail::initimpl::constructor<Args ...>&, const Extra& ...) [with Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}; Extra = {}; type_ = shps::Publisher<signed char>; options = {}]’
       1659 |         init.execute(*this, extra...);
            |         ~~~~~~~~~~~~^~~~~~~~~~~~~~~~~
      module.cpp:69:13:   required from ‘void declare_pubsub(pybind11::module_&, const char*, const char*) [with T = signed char]’
         68 |     py::class_<shps::Publisher<T>>(m, pubname)
            |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
         69 |         .def(py::init<const std::string&>())
            |         ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      module.cpp:126:5:   required from here
         93 |     declare_pubsub<T>(m, "Publisher_" name, "Subscriber_" name); \
            |     ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      ../SharedPubSub.hpp:211:21: warning: ‘shps::Publisher<signed char>::topicName’ will be initialized after [-Wreorder]
        211 |         std::string topicName;
            |                     ^~~~~~~~~
      ../SharedPubSub.hpp:115:56: warning:   base ‘shps::SharedMemoryManager<signed char>’ [-Wreorder]
        115 |         : topicName(topicName_),SharedMemoryManager<T>(){
            |                                                        ^
      ../SharedPubSub.hpp:114:9: warning:   when initialized here [-Wreorder]
        114 |         Publisher(std::string topicName_)
            |         ^~~~~~~~~
      ../SharedPubSub.hpp: In instantiation of ‘shps::Subscriber<T>::Subscriber(std::string, std::string, bool) [with T = signed char; std::string = std::__cxx11::basic_string<char>]’:
      /tmp/pip-build-env-bagsv2bh/overlay/lib/python3.13/site-packages/pybind11/include/pybind11/detail/init.h:76:12:   required from ‘Class* pybind11::detail::initimpl::construct_or_initialize(Args&& ...) [with Class = shps::Subscriber<signed char>; Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool}; typename std::enable_if<std::is_constructible<_Tp, _Args>::value, int>::type <anonymous> = 0]’
         76 |     return new Class(std::forward<Args>(args)...);
            |            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      /tmp/pip-build-env-bagsv2bh/overlay/lib/python3.13/site-packages/pybind11/include/pybind11/detail/init.h:208:70:   required from ‘static void pybind11::detail::initimpl::constructor<Args>::execute(Class&, const Extra& ...) [with Class = pybind11::class_<shps::Subscriber<signed char> >; Extra = {}; typename std::enable_if<(! Class::has_alias), int>::type <anonymous> = 0; Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool}]’
        208 |                 v_h.value_ptr() = construct_or_initialize<Cpp<Class>>(std::forward<Args>(args)...);
            |                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      /tmp/pip-build-env-bagsv2bh/overlay/lib/python3.13/site-packages/pybind11/include/pybind11/pybind11.h:1659:21:   required from ‘pybind11::class_<type_, options>& pybind11::class_<type_, options>::def(const pybind11::detail::initimpl::constructor<Args ...>&, const Extra& ...) [with Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool}; Extra = {}; type_ = shps::Subscriber<signed char>; options = {}]’
       1659 |         init.execute(*this, extra...);
            |         ~~~~~~~~~~~~^~~~~~~~~~~~~~~~~
      module.cpp:81:13:   required from ‘void declare_pubsub(pybind11::module_&, const char*, const char*) [with T = signed char]’
         80 |     py::class_<shps::Subscriber<T>>(m, subname)
            |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
         81 |         .def(py::init<const std::string&, const std::string&, bool>())
            |         ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      module.cpp:126:5:   required from here
         93 |     declare_pubsub<T>(m, "Publisher_" name, "Subscriber_" name); \
            |     ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      ../SharedPubSub.hpp:336:21: warning: ‘shps::Subscriber<signed char>::subscriberName’ will be initialized after [-Wreorder]
        336 |         std::string subscriberName;
            |                     ^~~~~~~~~~~~~~
      ../SharedPubSub.hpp:254:86: warning:   base ‘shps::SharedMemoryManager<signed char>’ [-Wreorder]
        254 |         topicName(topicName_),subscriberName(subscriberName_),SharedMemoryManager<T>(){
            |                                                                                      ^
      ../SharedPubSub.hpp:253:9: warning:   when initialized here [-Wreorder]
        253 |         Subscriber(std::string topicName_,std::string subscriberName_,bool doSubscribe = false) :
            |         ^~~~~~~~~~
      ../SharedPubSub.hpp: In instantiation of ‘shps::Publisher<T>::Publisher(std::string) [with T = std::atomic<signed char>; std::string = std::__cxx11::basic_string<char>]’:
      /tmp/pip-build-env-bagsv2bh/overlay/lib/python3.13/site-packages/pybind11/include/pybind11/detail/init.h:76:12:   required from ‘Class* pybind11::detail::initimpl::construct_or_initialize(Args&& ...) [with Class = shps::Publisher<std::atomic<signed char> >; Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}; typename std::enable_if<std::is_constructible<_Tp, _Args>::value, int>::type <anonymous> = 0]’
         76 |     return new Class(std::forward<Args>(args)...);
            |            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      /tmp/pip-build-env-bagsv2bh/overlay/lib/python3.13/site-packages/pybind11/include/pybind11/detail/init.h:208:70:   required from ‘static void pybind11::detail::initimpl::constructor<Args>::execute(Class&, const Extra& ...) [with Class = pybind11::class_<shps::Publisher<std::atomic<signed char> > >; Extra = {}; typename std::enable_if<(! Class::has_alias), int>::type <anonymous> = 0; Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}]’
        208 |                 v_h.value_ptr() = construct_or_initialize<Cpp<Class>>(std::forward<Args>(args)...);
            |                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      /tmp/pip-build-env-bagsv2bh/overlay/lib/python3.13/site-packages/pybind11/include/pybind11/pybind11.h:1659:21:   required from ‘pybind11::class_<type_, options>& pybind11::class_<type_, options>::def(const pybind11::detail::initimpl::constructor<Args ...>&, const Extra& ...) [with Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}; Extra = {}; type_ = shps::Publisher<std::atomic<signed char> >; options = {}]’
       1659 |         init.execute(*this, extra...);
            |         ~~~~~~~~~~~~^~~~~~~~~~~~~~~~~
      module.cpp:69:13:   required from ‘void declare_pubsub(pybind11::module_&, const char*, const char*) [with T = std::atomic<signed char>]’
         68 |     py::class_<shps::Publisher<T>>(m, pubname)
            |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
         69 |         .def(py::init<const std::string&>())
            |         ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      module.cpp:126:5:   required from here
         94 |     declare_pubsub<atomic<T>>(m, "Publisher_atomic_" name, "Subscriber_atomic_" name);
            |     ~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      ../SharedPubSub.hpp:211:21: warning: ‘shps::Publisher<std::atomic<signed char> >::topicName’ will be initialized after [-Wreorder]
        211 |         std::string topicName;
            |                     ^~~~~~~~~
      ../SharedPubSub.hpp:115:56: warning:   base ‘shps::SharedMemoryManager<std::atomic<signed char> >’ [-Wreorder]
        115 |         : topicName(topicName_),SharedMemoryManager<T>(){
            |                                                        ^
      ../SharedPubSub.hpp:114:9: warning:   when initialized here [-Wreorder]
        114 |         Publisher(std::string topicName_)
            |         ^~~~~~~~~
      ../SharedPubSub.hpp: In instantiation of ‘shps::Subscriber<T>::Subscriber(std::string, std::string, bool) [with T = std::atomic<signed char>; std::string = std::__cxx11::basic_string<char>]’:
      /tmp/pip-build-env-bagsv2bh/overlay/lib/python3.13/site-packages/pybind11/include/pybind11/detail/init.h:76:12:   required from ‘Class* pybind11::detail::initimpl::construct_or_initialize(Args&& ...) [with Class = shps::Subscriber<std::atomic<signed char> >; Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool}; typename std::enable_if<std::is_constructible<_Tp, _Args>::value, int>::type <anonymous> = 0]’
         76 |     return new Class(std::forward<Args>(args)...);
            |            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      /tmp/pip-build-env-bagsv2bh/overlay/lib/python3.13/site-packages/pybind11/include/pybind11/detail/init.h:208:70:   required from ‘static void pybind11::detail::initimpl::constructor<Args>::execute(Class&, const Extra& ...) [with Class = pybind11::class_<shps::Subscriber<std::atomic<signed char> > >; Extra = {}; typename std::enable_if<(! Class::has_alias), int>::type <anonymous> = 0; Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool}]’
        208 |                 v_h.value_ptr() = construct_or_initialize<Cpp<Class>>(std::forward<Args>(args)...);
            |                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      /tmp/pip-build-env-bagsv2bh/overlay/lib/python3.13/site-packages/pybind11/include/pybind11/pybind11.h:1659:21:   required from ‘pybind11::class_<type_, options>& pybind11::class_<type_, options>::def(const pybind11::detail::initimpl::constructor<Args ...>&, const Extra& ...) [with Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool}; Extra = {}; type_ = shps::Subscriber<std::atomic<signed char> >; options = {}]’
       1659 |         init.execute(*this, extra...);
            |         ~~~~~~~~~~~~^~~~~~~~~~~~~~~~~
      module.cpp:81:13:   required from ‘void declare_pubsub(pybind11::module_&, const char*, const char*) [with T = std::atomic<signed char>]’
         80 |     py::class_<shps::Subscriber<T>>(m, subname)
            |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
         81 |         .def(py::init<const std::string&, const std::string&, bool>())
            |         ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      module.cpp:126:5:   required from here
         94 |     declare_pubsub<atomic<T>>(m, "Publisher_atomic_" name, "Subscriber_atomic_" name);
            |     ~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      ../SharedPubSub.hpp:336:21: warning: ‘shps::Subscriber<std::atomic<signed char> >::subscriberName’ will be initialized after [-Wreorder]
        336 |         std::string subscriberName;
            |                     ^~~~~~~~~~~~~~
      ../SharedPubSub.hpp:254:86: warning:   base ‘shps::SharedMemoryManager<std::atomic<signed char> >’ [-Wreorder]
        254 |         topicName(topicName_),subscriberName(subscriberName_),SharedMemoryManager<T>(){
            |                                                                                      ^
      ../SharedPubSub.hpp:253:9: warning:   when initialized here [-Wreorder]
        253 |         Subscriber(std::string topicName_,std::string subscriberName_,bool doSubscribe = false) :
            |         ^~~~~~~~~~
      ../SharedPubSub.hpp: In instantiation of ‘shps::Publisher<T>::Publisher(std::string) [with T = unsigned char; std::string = std::__cxx11::basic_string<char>]’:
      /tmp/pip-build-env-bagsv2bh/overlay/lib/python3.13/site-packages/pybind11/include/pybind11/detail/init.h:76:12:   required from ‘Class* pybind11::detail::initimpl::construct_or_initialize(Args&& ...) [with Class = shps::Publisher<unsigned char>; Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}; typename std::enable_if<std::is_constructible<_Tp, _Args>::value, int>::type <anonymous> = 0]’
         76 |     return new Class(std::forward<Args>(args)...);
            |            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      /tmp/pip-build-env-bagsv2bh/overlay/lib/python3.13/site-packages/pybind11/include/pybind11/detail/init.h:208:70:   required from ‘static void pybind11::detail::initimpl::constructor<Args>::execute(Class&, const Extra& ...) [with Class = pybind11::class_<shps::Publisher<unsigned char> >; Extra = {}; typename std::enable_if<(! Class::has_alias), int>::type <anonymous> = 0; Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}]’
        208 |                 v_h.value_ptr() = construct_or_initialize<Cpp<Class>>(std::forward<Args>(args)...);
            |                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      /tmp/pip-build-env-bagsv2bh/overlay/lib/python3.13/site-packages/pybind11/include/pybind11/pybind11.h:1659:21:   required from ‘pybind11::class_<type_, options>& pybind11::class_<type_, options>::def(const pybind11::detail::initimpl::constructor<Args ...>&, const Extra& ...) [with Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}; Extra = {}; type_ = shps::Publisher<unsigned char>; options = {}]’
       1659 |         init.execute(*this, extra...);
            |         ~~~~~~~~~~~~^~~~~~~~~~~~~~~~~
      module.cpp:69:13:   required from ‘void declare_pubsub(pybind11::module_&, const char*, const char*) [with T = unsigned char]’
         68 |     py::class_<shps::Publisher<T>>(m, pubname)
            |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
         69 |         .def(py::init<const std::string&>())
            |         ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      module.cpp:127:5:   required from here
         93 |     declare_pubsub<T>(m, "Publisher_" name, "Subscriber_" name); \
            |     ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      ../SharedPubSub.hpp:211:21: warning: ‘shps::Publisher<unsigned char>::topicName’ will be initialized after [-Wreorder]
        211 |         std::string topicName;
            |                     ^~~~~~~~~
      ../SharedPubSub.hpp:115:56: warning:   base ‘shps::SharedMemoryManager<unsigned char>’ [-Wreorder]
        115 |         : topicName(topicName_),SharedMemoryManager<T>(){
            |                                                        ^
      ../SharedPubSub.hpp:114:9: warning:   when initialized here [-Wreorder]
        114 |         Publisher(std::string topicName_)
            |         ^~~~~~~~~
      ../SharedPubSub.hpp: In instantiation of ‘shps::Subscriber<T>::Subscriber(std::string, std::string, bool) [with T = unsigned char; std::string = std::__cxx11::basic_string<char>]’:
      /tmp/pip-build-env-bagsv2bh/overlay/lib/python3.13/site-packages/pybind11/include/pybind11/detail/init.h:76:12:   required from ‘Class* pybind11::detail::initimpl::construct_or_initialize(Args&& ...) [with Class = shps::Subscriber<unsigned char>; Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool}; typename std::enable_if<std::is_constructible<_Tp, _Args>::value, int>::type <anonymous> = 0]’
         76 |     return new Class(std::forward<Args>(args)...);
            |            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      /tmp/pip-build-env-bagsv2bh/overlay/lib/python3.13/site-packages/pybind11/include/pybind11/detail/init.h:208:70:   required from ‘static void pybind11::detail::initimpl::constructor<Args>::execute(Class&, const Extra& ...) [with Class = pybind11::class_<shps::Subscriber<unsigned char> >; Extra = {}; typename std::enable_if<(! Class::has_alias), int>::type <anonymous> = 0; Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool}]’
        208 |                 v_h.value_ptr() = construct_or_initialize<Cpp<Class>>(std::forward<Args>(args)...);
            |                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      /tmp/pip-build-env-bagsv2bh/overlay/lib/python3.13/site-packages/pybind11/include/pybind11/pybind11.h:1659:21:   required from ‘pybind11::class_<type_, options>& pybind11::class_<type_, options>::def(const pybind11::detail::initimpl::constructor<Args ...>&, const Extra& ...) [with Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool}; Extra = {}; type_ = shps::Subscriber<unsigned char>; options = {}]’
       1659 |         init.execute(*this, extra...);
            |         ~~~~~~~~~~~~^~~~~~~~~~~~~~~~~
      module.cpp:81:13:   required from ‘void declare_pubsub(pybind11::module_&, const char*, const char*) [with T = unsigned char]’
         80 |     py::class_<shps::Subscriber<T>>(m, subname)
            |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
         81 |         .def(py::init<const std::string&, const std::string&, bool>())
            |         ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      module.cpp:127:5:   required from here
         93 |     declare_pubsub<T>(m, "Publisher_" name, "Subscriber_" name); \
            |     ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      ../SharedPubSub.hpp:336:21: warning: ‘shps::Subscriber<unsigned char>::subscriberName’ will be initialized after [-Wreorder]
        336 |         std::string subscriberName;
            |                     ^~~~~~~~~~~~~~
      ../SharedPubSub.hpp:254:86: warning:   base ‘shps::SharedMemoryManager<unsigned char>’ [-Wreorder]
        254 |         topicName(topicName_),subscriberName(subscriberName_),SharedMemoryManager<T>(){
            |                                                                                      ^
      ../SharedPubSub.hpp:253:9: warning:   when initialized here [-Wreorder]
        253 |         Subscriber(std::string topicName_,std::string subscriberName_,bool doSubscribe = false) :
            |         ^~~~~~~~~~
      ../SharedPubSub.hpp: In instantiation of ‘shps::Publisher<T>::Publisher(std::string) [with T = std::atomic<unsigned char>; std::string = std::__cxx11::basic_string<char>]’:
      /tmp/pip-build-env-bagsv2bh/overlay/lib/python3.13/site-packages/pybind11/include/pybind11/detail/init.h:76:12:   required from ‘Class* pybind11::detail::initimpl::construct_or_initialize(Args&& ...) [with Class = shps::Publisher<std::atomic<unsigned char> >; Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}; typename std::enable_if<std::is_constructible<_Tp, _Args>::value, int>::type <anonymous> = 0]’
         76 |     return new Class(std::forward<Args>(args)...);
            |            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      /tmp/pip-build-env-bagsv2bh/overlay/lib/python3.13/site-packages/pybind11/include/pybind11/detail/init.h:208:70:   required from ‘static void pybind11::detail::initimpl::constructor<Args>::execute(Class&, const Extra& ...) [with Class = pybind11::class_<shps::Publisher<std::atomic<unsigned char> > >; Extra = {}; typename std::enable_if<(! Class::has_alias), int>::type <anonymous> = 0; Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}]’
        208 |                 v_h.value_ptr() = construct_or_initialize<Cpp<Class>>(std::forward<Args>(args)...);
            |                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      /tmp/pip-build-env-bagsv2bh/overlay/lib/python3.13/site-packages/pybind11/include/pybind11/pybind11.h:1659:21:   required from ‘pybind11::class_<type_, options>& pybind11::class_<type_, options>::def(const pybind11::detail::initimpl::constructor<Args ...>&, const Extra& ...) [with Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}; Extra = {}; type_ = shps::Publisher<std::atomic<unsigned char> >; options = {}]’
       1659 |         init.execute(*this, extra...);
            |         ~~~~~~~~~~~~^~~~~~~~~~~~~~~~~
      module.cpp:69:13:   required from ‘void declare_pubsub(pybind11::module_&, const char*, const char*) [with T = std::atomic<unsigned char>]’
         68 |     py::class_<shps::Publisher<T>>(m, pubname)
            |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
         69 |         .def(py::init<const std::string&>())
            |         ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      module.cpp:127:5:   required from here
         94 |     declare_pubsub<atomic<T>>(m, "Publisher_atomic_" name, "Subscriber_atomic_" name);
            |     ~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      ../SharedPubSub.hpp:211:21: warning: ‘shps::Publisher<std::atomic<unsigned char> >::topicName’ will be initialized after [-Wreorder]
        211 |         std::string topicName;
            |                     ^~~~~~~~~
      ../SharedPubSub.hpp:115:56: warning:   base ‘shps::SharedMemoryManager<std::atomic<unsigned char> >’ [-Wreorder]
        115 |         : topicName(topicName_),SharedMemoryManager<T>(){
            |                                                        ^
      ../SharedPubSub.hpp:114:9: warning:   when initialized here [-Wreorder]
        114 |         Publisher(std::string topicName_)
            |         ^~~~~~~~~
      ../SharedPubSub.hpp: In instantiation of ‘shps::Subscriber<T>::Subscriber(std::string, std::string, bool) [with T = std::atomic<unsigned char>; std::string = std::__cxx11::basic_string<char>]’:
      /tmp/pip-build-env-bagsv2bh/overlay/lib/python3.13/site-packages/pybind11/include/pybind11/detail/init.h:76:12:   required from ‘Class* pybind11::detail::initimpl::construct_or_initialize(Args&& ...) [with Class = shps::Subscriber<std::atomic<unsigned char> >; Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool}; typename std::enable_if<std::is_constructible<_Tp, _Args>::value, int>::type <anonymous> = 0]’
         76 |     return new Class(std::forward<Args>(args)...);
            |            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      /tmp/pip-build-env-bagsv2bh/overlay/lib/python3.13/site-packages/pybind11/include/pybind11/detail/init.h:208:70:   required from ‘static void pybind11::detail::initimpl::constructor<Args>::execute(Class&, const Extra& ...) [with Class = pybind11::class_<shps::Subscriber<std::atomic<unsigned char> > >; Extra = {}; typename std::enable_if<(! Class::has_alias), int>::type <anonymous> = 0; Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool}]’
        208 |                 v_h.value_ptr() = construct_or_initialize<Cpp<Class>>(std::forward<Args>(args)...);
            |                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      /tmp/pip-build-env-bagsv2bh/overlay/lib/python3.13/site-packages/pybind11/include/pybind11/pybind11.h:1659:21:   required from ‘pybind11::class_<type_, options>& pybind11::class_<type_, options>::def(const pybind11::detail::initimpl::constructor<Args ...>&, const Extra& ...) [with Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool}; Extra = {}; type_ = shps::Subscriber<std::atomic<unsigned char> >; options = {}]’
       1659 |         init.execute(*this, extra...);
            |         ~~~~~~~~~~~~^~~~~~~~~~~~~~~~~
      module.cpp:81:13:   required from ‘void declare_pubsub(pybind11::module_&, const char*, const char*) [with T = std::atomic<unsigned char>]’
         80 |     py::class_<shps::Subscriber<T>>(m, subname)
            |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
         81 |         .def(py::init<const std::string&, const std::string&, bool>())
            |         ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      module.cpp:127:5:   required from here
         94 |     declare_pubsub<atomic<T>>(m, "Publisher_atomic_" name, "Subscriber_atomic_" name);
            |     ~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      ../SharedPubSub.hpp:336:21: warning: ‘shps::Subscriber<std::atomic<unsigned char> >::subscriberName’ will be initialized after [-Wreorder]
        336 |         std::string subscriberName;
            |                     ^~~~~~~~~~~~~~
      ../SharedPubSub.hpp:254:86: warning:   base ‘shps::SharedMemoryManager<std::atomic<unsigned char> >’ [-Wreorder]
        254 |         topicName(topicName_),subscriberName(subscriberName_),SharedMemoryManager<T>(){
            |                                                                                      ^
      ../SharedPubSub.hpp:253:9: warning:   when initialized here [-Wreorder]
        253 |         Subscriber(std::string topicName_,std::string subscriberName_,bool doSubscribe = false) :
            |         ^~~~~~~~~~
      ../SharedPubSub.hpp: In instantiation of ‘shps::Publisher<T>::Publisher(std::string) [with T = short int; std::string = std::__cxx11::basic_string<char>]’:
      /tmp/pip-build-env-bagsv2bh/overlay/lib/python3.13/site-packages/pybind11/include/pybind11/detail/init.h:76:12:   required from ‘Class* pybind11::detail::initimpl::construct_or_initialize(Args&& ...) [with Class = shps::Publisher<short int>; Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}; typename std::enable_if<std::is_constructible<_Tp, _Args>::value, int>::type <anonymous> = 0]’
         76 |     return new Class(std::forward<Args>(args)...);
            |            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      /tmp/pip-build-env-bagsv2bh/overlay/lib/python3.13/site-packages/pybind11/include/pybind11/detail/init.h:208:70:   required from ‘static void pybind11::detail::initimpl::constructor<Args>::execute(Class&, const Extra& ...) [with Class = pybind11::class_<shps::Publisher<short int> >; Extra = {}; typename std::enable_if<(! Class::has_alias), int>::type <anonymous> = 0; Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}]’
        208 |                 v_h.value_ptr() = construct_or_initialize<Cpp<Class>>(std::forward<Args>(args)...);
            |                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      /tmp/pip-build-env-bagsv2bh/overlay/lib/python3.13/site-packages/pybind11/include/pybind11/pybind11.h:1659:21:   required from ‘pybind11::class_<type_, options>& pybind11::class_<type_, options>::def(const pybind11::detail::initimpl::constructor<Args ...>&, const Extra& ...) [with Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}; Extra = {}; type_ = shps::Publisher<short int>; options = {}]’
       1659 |         init.execute(*this, extra...);
            |         ~~~~~~~~~~~~^~~~~~~~~~~~~~~~~
      module.cpp:69:13:   required from ‘void declare_pubsub(pybind11::module_&, const char*, const char*) [with T = short int]’
         68 |     py::class_<shps::Publisher<T>>(m, pubname)
            |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
         69 |         .def(py::init<const std::string&>())
            |         ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      module.cpp:128:5:   required from here
         93 |     declare_pubsub<T>(m, "Publisher_" name, "Subscriber_" name); \
            |     ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      ../SharedPubSub.hpp:211:21: warning: ‘shps::Publisher<short int>::topicName’ will be initialized after [-Wreorder]
        211 |         std::string topicName;
            |                     ^~~~~~~~~
      ../SharedPubSub.hpp:115:56: warning:   base ‘shps::SharedMemoryManager<short int>’ [-Wreorder]
        115 |         : topicName(topicName_),SharedMemoryManager<T>(){
            |                                                        ^
      ../SharedPubSub.hpp:114:9: warning:   when initialized here [-Wreorder]
        114 |         Publisher(std::string topicName_)
            |         ^~~~~~~~~
      ../SharedPubSub.hpp: In instantiation of ‘shps::Subscriber<T>::Subscriber(std::string, std::string, bool) [with T = short int; std::string = std::__cxx11::basic_string<char>]’:
      /tmp/pip-build-env-bagsv2bh/overlay/lib/python3.13/site-packages/pybind11/include/pybind11/detail/init.h:76:12:   required from ‘Class* pybind11::detail::initimpl::construct_or_initialize(Args&& ...) [with Class = shps::Subscriber<short int>; Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool}; typename std::enable_if<std::is_constructible<_Tp, _Args>::value, int>::type <anonymous> = 0]’
         76 |     return new Class(std::forward<Args>(args)...);
            |            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      /tmp/pip-build-env-bagsv2bh/overlay/lib/python3.13/site-packages/pybind11/include/pybind11/detail/init.h:208:70:   required from ‘static void pybind11::detail::initimpl::constructor<Args>::execute(Class&, const Extra& ...) [with Class = pybind11::class_<shps::Subscriber<short int> >; Extra = {}; typename std::enable_if<(! Class::has_alias), int>::type <anonymous> = 0; Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool}]’
        208 |                 v_h.value_ptr() = construct_or_initialize<Cpp<Class>>(std::forward<Args>(args)...);
            |                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      /tmp/pip-build-env-bagsv2bh/overlay/lib/python3.13/site-packages/pybind11/include/pybind11/pybind11.h:1659:21:   required from ‘pybind11::class_<type_, options>& pybind11::class_<type_, options>::def(const pybind11::detail::initimpl::constructor<Args ...>&, const Extra& ...) [with Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool}; Extra = {}; type_ = shps::Subscriber<short int>; options = {}]’
       1659 |         init.execute(*this, extra...);
            |         ~~~~~~~~~~~~^~~~~~~~~~~~~~~~~
      module.cpp:81:13:   required from ‘void declare_pubsub(pybind11::module_&, const char*, const char*) [with T = short int]’
         80 |     py::class_<shps::Subscriber<T>>(m, subname)
            |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
         81 |         .def(py::init<const std::string&, const std::string&, bool>())
            |         ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      module.cpp:128:5:   required from here
         93 |     declare_pubsub<T>(m, "Publisher_" name, "Subscriber_" name); \
            |     ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      ../SharedPubSub.hpp:336:21: warning: ‘shps::Subscriber<short int>::subscriberName’ will be initialized after [-Wreorder]
        336 |         std::string subscriberName;
            |                     ^~~~~~~~~~~~~~
      ../SharedPubSub.hpp:254:86: warning:   base ‘shps::SharedMemoryManager<short int>’ [-Wreorder]
        254 |         topicName(topicName_),subscriberName(subscriberName_),SharedMemoryManager<T>(){
            |                                                                                      ^
      ../SharedPubSub.hpp:253:9: warning:   when initialized here [-Wreorder]
        253 |         Subscriber(std::string topicName_,std::string subscriberName_,bool doSubscribe = false) :
            |         ^~~~~~~~~~
      ../SharedPubSub.hpp: In instantiation of ‘shps::Publisher<T>::Publisher(std::string) [with T = std::atomic<short int>; std::string = std::__cxx11::basic_string<char>]’:
      /tmp/pip-build-env-bagsv2bh/overlay/lib/python3.13/site-packages/pybind11/include/pybind11/detail/init.h:76:12:   required from ‘Class* pybind11::detail::initimpl::construct_or_initialize(Args&& ...) [with Class = shps::Publisher<std::atomic<short int> >; Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}; typename std::enable_if<std::is_constructible<_Tp, _Args>::value, int>::type <anonymous> = 0]’
         76 |     return new Class(std::forward<Args>(args)...);
            |            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      /tmp/pip-build-env-bagsv2bh/overlay/lib/python3.13/site-packages/pybind11/include/pybind11/detail/init.h:208:70:   required from ‘static void pybind11::detail::initimpl::constructor<Args>::execute(Class&, const Extra& ...) [with Class = pybind11::class_<shps::Publisher<std::atomic<short int> > >; Extra = {}; typename std::enable_if<(! Class::has_alias), int>::type <anonymous> = 0; Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}]’
        208 |                 v_h.value_ptr() = construct_or_initialize<Cpp<Class>>(std::forward<Args>(args)...);
            |                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      /tmp/pip-build-env-bagsv2bh/overlay/lib/python3.13/site-packages/pybind11/include/pybind11/pybind11.h:1659:21:   required from ‘pybind11::class_<type_, options>& pybind11::class_<type_, options>::def(const pybind11::detail::initimpl::constructor<Args ...>&, const Extra& ...) [with Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}; Extra = {}; type_ = shps::Publisher<std::atomic<short int> >; options = {}]’
       1659 |         init.execute(*this, extra...);
            |         ~~~~~~~~~~~~^~~~~~~~~~~~~~~~~
      module.cpp:69:13:   required from ‘void declare_pubsub(pybind11::module_&, const char*, const char*) [with T = std::atomic<short int>]’
         68 |     py::class_<shps::Publisher<T>>(m, pubname)
            |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
         69 |         .def(py::init<const std::string&>())
            |         ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      module.cpp:128:5:   required from here
         94 |     declare_pubsub<atomic<T>>(m, "Publisher_atomic_" name, "Subscriber_atomic_" name);
            |     ~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      ../SharedPubSub.hpp:211:21: warning: ‘shps::Publisher<std::atomic<short int> >::topicName’ will be initialized after [-Wreorder]
        211 |         std::string topicName;
            |                     ^~~~~~~~~
      ../SharedPubSub.hpp:115:56: warning:   base ‘shps::SharedMemoryManager<std::atomic<short int> >’ [-Wreorder]
        115 |         : topicName(topicName_),SharedMemoryManager<T>(){
            |                                                        ^
      ../SharedPubSub.hpp:114:9: warning:   when initialized here [-Wreorder]
        114 |         Publisher(std::string topicName_)
            |         ^~~~~~~~~
      ../SharedPubSub.hpp: In instantiation of ‘shps::Subscriber<T>::Subscriber(std::string, std::string, bool) [with T = std::atomic<short int>; std::string = std::__cxx11::basic_string<char>]’:
      /tmp/pip-build-env-bagsv2bh/overlay/lib/python3.13/site-packages/pybind11/include/pybind11/detail/init.h:76:12:   required from ‘Class* pybind11::detail::initimpl::construct_or_initialize(Args&& ...) [with Class = shps::Subscriber<std::atomic<short int> >; Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool}; typename std::enable_if<std::is_constructible<_Tp, _Args>::value, int>::type <anonymous> = 0]’
         76 |     return new Class(std::forward<Args>(args)...);
            |            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      /tmp/pip-build-env-bagsv2bh/overlay/lib/python3.13/site-packages/pybind11/include/pybind11/detail/init.h:208:70:   required from ‘static void pybind11::detail::initimpl::constructor<Args>::execute(Class&, const Extra& ...) [with Class = pybind11::class_<shps::Subscriber<std::atomic<short int> > >; Extra = {}; typename std::enable_if<(! Class::has_alias), int>::type <anonymous> = 0; Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool}]’
        208 |                 v_h.value_ptr() = construct_or_initialize<Cpp<Class>>(std::forward<Args>(args)...);
            |                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      /tmp/pip-build-env-bagsv2bh/overlay/lib/python3.13/site-packages/pybind11/include/pybind11/pybind11.h:1659:21:   required from ‘pybind11::class_<type_, options>& pybind11::class_<type_, options>::def(const pybind11::detail::initimpl::constructor<Args ...>&, const Extra& ...) [with Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool}; Extra = {}; type_ = shps::Subscriber<std::atomic<short int> >; options = {}]’
       1659 |         init.execute(*this, extra...);
            |         ~~~~~~~~~~~~^~~~~~~~~~~~~~~~~
      module.cpp:81:13:   required from ‘void declare_pubsub(pybind11::module_&, const char*, const char*) [with T = std::atomic<short int>]’
         80 |     py::class_<shps::Subscriber<T>>(m, subname)
            |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
         81 |         .def(py::init<const std::string&, const std::string&, bool>())
            |         ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      module.cpp:128:5:   required from here
         94 |     declare_pubsub<atomic<T>>(m, "Publisher_atomic_" name, "Subscriber_atomic_" name);
            |     ~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      ../SharedPubSub.hpp:336:21: warning: ‘shps::Subscriber<std::atomic<short int> >::subscriberName’ will be initialized after [-Wreorder]
        336 |         std::string subscriberName;
            |                     ^~~~~~~~~~~~~~
      ../SharedPubSub.hpp:254:86: warning:   base ‘shps::SharedMemoryManager<std::atomic<short int> >’ [-Wreorder]
        254 |         topicName(topicName_),subscriberName(subscriberName_),SharedMemoryManager<T>(){
            |                                                                                      ^
      ../SharedPubSub.hpp:253:9: warning:   when initialized here [-Wreorder]
        253 |         Subscriber(std::string topicName_,std::string subscriberName_,bool doSubscribe = false) :
            |         ^~~~~~~~~~
      ../SharedPubSub.hpp: In instantiation of ‘shps::Publisher<T>::Publisher(std::string) [with T = short unsigned int; std::string = std::__cxx11::basic_string<char>]’:
      /tmp/pip-build-env-bagsv2bh/overlay/lib/python3.13/site-packages/pybind11/include/pybind11/detail/init.h:76:12:   required from ‘Class* pybind11::detail::initimpl::construct_or_initialize(Args&& ...) [with Class = shps::Publisher<short unsigned int>; Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}; typename std::enable_if<std::is_constructible<_Tp, _Args>::value, int>::type <anonymous> = 0]’
         76 |     return new Class(std::forward<Args>(args)...);
            |            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      /tmp/pip-build-env-bagsv2bh/overlay/lib/python3.13/site-packages/pybind11/include/pybind11/detail/init.h:208:70:   required from ‘static void pybind11::detail::initimpl::constructor<Args>::execute(Class&, const Extra& ...) [with Class = pybind11::class_<shps::Publisher<short unsigned int> >; Extra = {}; typename std::enable_if<(! Class::has_alias), int>::type <anonymous> = 0; Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}]’
        208 |                 v_h.value_ptr() = construct_or_initialize<Cpp<Class>>(std::forward<Args>(args)...);
            |                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      /tmp/pip-build-env-bagsv2bh/overlay/lib/python3.13/site-packages/pybind11/include/pybind11/pybind11.h:1659:21:   required from ‘pybind11::class_<type_, options>& pybind11::class_<type_, options>::def(const pybind11::detail::initimpl::constructor<Args ...>&, const Extra& ...) [with Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}; Extra = {}; type_ = shps::Publisher<short unsigned int>; options = {}]’
       1659 |         init.execute(*this, extra...);
            |         ~~~~~~~~~~~~^~~~~~~~~~~~~~~~~
      module.cpp:69:13:   required from ‘void declare_pubsub(pybind11::module_&, const char*, const char*) [with T = short unsigned int]’
         68 |     py::class_<shps::Publisher<T>>(m, pubname)
            |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
         69 |         .def(py::init<const std::string&>())
            |         ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      module.cpp:129:5:   required from here
         93 |     declare_pubsub<T>(m, "Publisher_" name, "Subscriber_" name); \
            |     ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      ../SharedPubSub.hpp:211:21: warning: ‘shps::Publisher<short unsigned int>::topicName’ will be initialized after [-Wreorder]
        211 |         std::string topicName;
            |                     ^~~~~~~~~
      ../SharedPubSub.hpp:115:56: warning:   base ‘shps::SharedMemoryManager<short unsigned int>’ [-Wreorder]
        115 |         : topicName(topicName_),SharedMemoryManager<T>(){
            |                                                        ^
      ../SharedPubSub.hpp:114:9: warning:   when initialized here [-Wreorder]
        114 |         Publisher(std::string topicName_)
            |         ^~~~~~~~~
      ../SharedPubSub.hpp: In instantiation of ‘shps::Subscriber<T>::Subscriber(std::string, std::string, bool) [with T = short unsigned int; std::string = std::__cxx11::basic_string<char>]’:
      /tmp/pip-build-env-bagsv2bh/overlay/lib/python3.13/site-packages/pybind11/include/pybind11/detail/init.h:76:12:   required from ‘Class* pybind11::detail::initimpl::construct_or_initialize(Args&& ...) [with Class = shps::Subscriber<short unsigned int>; Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool}; typename std::enable_if<std::is_constructible<_Tp, _Args>::value, int>::type <anonymous> = 0]’
         76 |     return new Class(std::forward<Args>(args)...);
            |            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      /tmp/pip-build-env-bagsv2bh/overlay/lib/python3.13/site-packages/pybind11/include/pybind11/detail/init.h:208:70:   required from ‘static void pybind11::detail::initimpl::constructor<Args>::execute(Class&, const Extra& ...) [with Class = pybind11::class_<shps::Subscriber<short unsigned int> >; Extra = {}; typename std::enable_if<(! Class::has_alias), int>::type <anonymous> = 0; Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool}]’
        208 |                 v_h.value_ptr() = construct_or_initialize<Cpp<Class>>(std::forward<Args>(args)...);
            |                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      /tmp/pip-build-env-bagsv2bh/overlay/lib/python3.13/site-packages/pybind11/include/pybind11/pybind11.h:1659:21:   required from ‘pybind11::class_<type_, options>& pybind11::class_<type_, options>::def(const pybind11::detail::initimpl::constructor<Args ...>&, const Extra& ...) [with Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool}; Extra = {}; type_ = shps::Subscriber<short unsigned int>; options = {}]’
       1659 |         init.execute(*this, extra...);
            |         ~~~~~~~~~~~~^~~~~~~~~~~~~~~~~
      module.cpp:81:13:   required from ‘void declare_pubsub(pybind11::module_&, const char*, const char*) [with T = short unsigned int]’
         80 |     py::class_<shps::Subscriber<T>>(m, subname)
            |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
         81 |         .def(py::init<const std::string&, const std::string&, bool>())
            |         ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      module.cpp:129:5:   required from here
         93 |     declare_pubsub<T>(m, "Publisher_" name, "Subscriber_" name); \
            |     ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      ../SharedPubSub.hpp:336:21: warning: ‘shps::Subscriber<short unsigned int>::subscriberName’ will be initialized after [-Wreorder]
        336 |         std::string subscriberName;
            |                     ^~~~~~~~~~~~~~
      ../SharedPubSub.hpp:254:86: warning:   base ‘shps::SharedMemoryManager<short unsigned int>’ [-Wreorder]
        254 |         topicName(topicName_),subscriberName(subscriberName_),SharedMemoryManager<T>(){
            |                                                                                      ^
      ../SharedPubSub.hpp:253:9: warning:   when initialized here [-Wreorder]
        253 |         Subscriber(std::string topicName_,std::string subscriberName_,bool doSubscribe = false) :
            |         ^~~~~~~~~~
      ../SharedPubSub.hpp: In instantiation of ‘shps::Publisher<T>::Publisher(std::string) [with T = std::atomic<short unsigned int>; std::string = std::__cxx11::basic_string<char>]’:
      /tmp/pip-build-env-bagsv2bh/overlay/lib/python3.13/site-packages/pybind11/include/pybind11/detail/init.h:76:12:   required from ‘Class* pybind11::detail::initimpl::construct_or_initialize(Args&& ...) [with Class = shps::Publisher<std::atomic<short unsigned int> >; Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}; typename std::enable_if<std::is_constructible<_Tp, _Args>::value, int>::type <anonymous> = 0]’
         76 |     return new Class(std::forward<Args>(args)...);
            |            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      /tmp/pip-build-env-bagsv2bh/overlay/lib/python3.13/site-packages/pybind11/include/pybind11/detail/init.h:208:70:   required from ‘static void pybind11::detail::initimpl::constructor<Args>::execute(Class&, const Extra& ...) [with Class = pybind11::class_<shps::Publisher<std::atomic<short unsigned int> > >; Extra = {}; typename std::enable_if<(! Class::has_alias), int>::type <anonymous> = 0; Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}]’
        208 |                 v_h.value_ptr() = construct_or_initialize<Cpp<Class>>(std::forward<Args>(args)...);
            |                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      /tmp/pip-build-env-bagsv2bh/overlay/lib/python3.13/site-packages/pybind11/include/pybind11/pybind11.h:1659:21:   required from ‘pybind11::class_<type_, options>& pybind11::class_<type_, options>::def(const pybind11::detail::initimpl::constructor<Args ...>&, const Extra& ...) [with Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}; Extra = {}; type_ = shps::Publisher<std::atomic<short unsigned int> >; options = {}]’
       1659 |         init.execute(*this, extra...);
            |         ~~~~~~~~~~~~^~~~~~~~~~~~~~~~~
      module.cpp:69:13:   required from ‘void declare_pubsub(pybind11::module_&, const char*, const char*) [with T = std::atomic<short unsigned int>]’
         68 |     py::class_<shps::Publisher<T>>(m, pubname)
            |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
         69 |         .def(py::init<const std::string&>())
            |         ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      module.cpp:129:5:   required from here
         94 |     declare_pubsub<atomic<T>>(m, "Publisher_atomic_" name, "Subscriber_atomic_" name);
            |     ~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      ../SharedPubSub.hpp:211:21: warning: ‘shps::Publisher<std::atomic<short unsigned int> >::topicName’ will be initialized after [-Wreorder]
        211 |         std::string topicName;
            |                     ^~~~~~~~~
      ../SharedPubSub.hpp:115:56: warning:   base ‘shps::SharedMemoryManager<std::atomic<short unsigned int> >’ [-Wreorder]
        115 |         : topicName(topicName_),SharedMemoryManager<T>(){
            |                                                        ^
      ../SharedPubSub.hpp:114:9: warning:   when initialized here [-Wreorder]
        114 |         Publisher(std::string topicName_)
            |         ^~~~~~~~~
      ../SharedPubSub.hpp: In instantiation of ‘shps::Subscriber<T>::Subscriber(std::string, std::string, bool) [with T = std::atomic<short unsigned int>; std::string = std::__cxx11::basic_string<char>]’:
      /tmp/pip-build-env-bagsv2bh/overlay/lib/python3.13/site-packages/pybind11/include/pybind11/detail/init.h:76:12:   required from ‘Class* pybind11::detail::initimpl::construct_or_initialize(Args&& ...) [with Class = shps::Subscriber<std::atomic<short unsigned int> >; Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool}; typename std::enable_if<std::is_constructible<_Tp, _Args>::value, int>::type <anonymous> = 0]’
         76 |     return new Class(std::forward<Args>(args)...);
            |            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      /tmp/pip-build-env-bagsv2bh/overlay/lib/python3.13/site-packages/pybind11/include/pybind11/detail/init.h:208:70:   required from ‘static void pybind11::detail::initimpl::constructor<Args>::execute(Class&, const Extra& ...) [with Class = pybind11::class_<shps::Subscriber<std::atomic<short unsigned int> > >; Extra = {}; typename std::enable_if<(! Class::has_alias), int>::type <anonymous> = 0; Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool}]’
        208 |                 v_h.value_ptr() = construct_or_initialize<Cpp<Class>>(std::forward<Args>(args)...);
            |                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      /tmp/pip-build-env-bagsv2bh/overlay/lib/python3.13/site-packages/pybind11/include/pybind11/pybind11.h:1659:21:   required from ‘pybind11::class_<type_, options>& pybind11::class_<type_, options>::def(const pybind11::detail::initimpl::constructor<Args ...>&, const Extra& ...) [with Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool}; Extra = {}; type_ = shps::Subscriber<std::atomic<short unsigned int> >; options = {}]’
       1659 |         init.execute(*this, extra...);
            |         ~~~~~~~~~~~~^~~~~~~~~~~~~~~~~
      module.cpp:81:13:   required from ‘void declare_pubsub(pybind11::module_&, const char*, const char*) [with T = std::atomic<short unsigned int>]’
         80 |     py::class_<shps::Subscriber<T>>(m, subname)
            |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
         81 |         .def(py::init<const std::string&, const std::string&, bool>())
            |         ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      module.cpp:129:5:   required from here
         94 |     declare_pubsub<atomic<T>>(m, "Publisher_atomic_" name, "Subscriber_atomic_" name);
            |     ~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      ../SharedPubSub.hpp:336:21: warning: ‘shps::Subscriber<std::atomic<short unsigned int> >::subscriberName’ will be initialized after [-Wreorder]
        336 |         std::string subscriberName;
            |                     ^~~~~~~~~~~~~~
      ../SharedPubSub.hpp:254:86: warning:   base ‘shps::SharedMemoryManager<std::atomic<short unsigned int> >’ [-Wreorder]
        254 |         topicName(topicName_),subscriberName(subscriberName_),SharedMemoryManager<T>(){
            |                                                                                      ^
      ../SharedPubSub.hpp:253:9: warning:   when initialized here [-Wreorder]
        253 |         Subscriber(std::string topicName_,std::string subscriberName_,bool doSubscribe = false) :
            |         ^~~~~~~~~~
      ../SharedPubSub.hpp: In instantiation of ‘shps::Publisher<T>::Publisher(std::string) [with T = long int; std::string = std::__cxx11::basic_string<char>]’:
      /tmp/pip-build-env-bagsv2bh/overlay/lib/python3.13/site-packages/pybind11/include/pybind11/detail/init.h:76:12:   required from ‘Class* pybind11::detail::initimpl::construct_or_initialize(Args&& ...) [with Class = shps::Publisher<long int>; Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}; typename std::enable_if<std::is_constructible<_Tp, _Args>::value, int>::type <anonymous> = 0]’
         76 |     return new Class(std::forward<Args>(args)...);
            |            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      /tmp/pip-build-env-bagsv2bh/overlay/lib/python3.13/site-packages/pybind11/include/pybind11/detail/init.h:208:70:   required from ‘static void pybind11::detail::initimpl::constructor<Args>::execute(Class&, const Extra& ...) [with Class = pybind11::class_<shps::Publisher<long int> >; Extra = {}; typename std::enable_if<(! Class::has_alias), int>::type <anonymous> = 0; Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}]’
        208 |                 v_h.value_ptr() = construct_or_initialize<Cpp<Class>>(std::forward<Args>(args)...);
            |                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      /tmp/pip-build-env-bagsv2bh/overlay/lib/python3.13/site-packages/pybind11/include/pybind11/pybind11.h:1659:21:   required from ‘pybind11::class_<type_, options>& pybind11::class_<type_, options>::def(const pybind11::detail::initimpl::constructor<Args ...>&, const Extra& ...) [with Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}; Extra = {}; type_ = shps::Publisher<long int>; options = {}]’
       1659 |         init.execute(*this, extra...);
            |         ~~~~~~~~~~~~^~~~~~~~~~~~~~~~~
      module.cpp:69:13:   required from ‘void declare_pubsub(pybind11::module_&, const char*, const char*) [with T = long int]’
         68 |     py::class_<shps::Publisher<T>>(m, pubname)
            |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
         69 |         .def(py::init<const std::string&>())
            |         ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      module.cpp:130:5:   required from here
         93 |     declare_pubsub<T>(m, "Publisher_" name, "Subscriber_" name); \
            |     ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      ../SharedPubSub.hpp:211:21: warning: ‘shps::Publisher<long int>::topicName’ will be initialized after [-Wreorder]
        211 |         std::string topicName;
            |                     ^~~~~~~~~
      ../SharedPubSub.hpp:115:56: warning:   base ‘shps::SharedMemoryManager<long int>’ [-Wreorder]
        115 |         : topicName(topicName_),SharedMemoryManager<T>(){
            |                                                        ^
      ../SharedPubSub.hpp:114:9: warning:   when initialized here [-Wreorder]
        114 |         Publisher(std::string topicName_)
            |         ^~~~~~~~~
      ../SharedPubSub.hpp: In instantiation of ‘shps::Subscriber<T>::Subscriber(std::string, std::string, bool) [with T = long int; std::string = std::__cxx11::basic_string<char>]’:
      /tmp/pip-build-env-bagsv2bh/overlay/lib/python3.13/site-packages/pybind11/include/pybind11/detail/init.h:76:12:   required from ‘Class* pybind11::detail::initimpl::construct_or_initialize(Args&& ...) [with Class = shps::Subscriber<long int>; Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool}; typename std::enable_if<std::is_constructible<_Tp, _Args>::value, int>::type <anonymous> = 0]’
         76 |     return new Class(std::forward<Args>(args)...);
            |            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      /tmp/pip-build-env-bagsv2bh/overlay/lib/python3.13/site-packages/pybind11/include/pybind11/detail/init.h:208:70:   required from ‘static void pybind11::detail::initimpl::constructor<Args>::execute(Class&, const Extra& ...) [with Class = pybind11::class_<shps::Subscriber<long int> >; Extra = {}; typename std::enable_if<(! Class::has_alias), int>::type <anonymous> = 0; Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool}]’
        208 |                 v_h.value_ptr() = construct_or_initialize<Cpp<Class>>(std::forward<Args>(args)...);
            |                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      /tmp/pip-build-env-bagsv2bh/overlay/lib/python3.13/site-packages/pybind11/include/pybind11/pybind11.h:1659:21:   required from ‘pybind11::class_<type_, options>& pybind11::class_<type_, options>::def(const pybind11::detail::initimpl::constructor<Args ...>&, const Extra& ...) [with Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool}; Extra = {}; type_ = shps::Subscriber<long int>; options = {}]’
       1659 |         init.execute(*this, extra...);
            |         ~~~~~~~~~~~~^~~~~~~~~~~~~~~~~
      module.cpp:81:13:   required from ‘void declare_pubsub(pybind11::module_&, const char*, const char*) [with T = long int]’
         80 |     py::class_<shps::Subscriber<T>>(m, subname)
            |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
         81 |         .def(py::init<const std::string&, const std::string&, bool>())
            |         ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      module.cpp:130:5:   required from here
         93 |     declare_pubsub<T>(m, "Publisher_" name, "Subscriber_" name); \
            |     ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      ../SharedPubSub.hpp:336:21: warning: ‘shps::Subscriber<long int>::subscriberName’ will be initialized after [-Wreorder]
        336 |         std::string subscriberName;
            |                     ^~~~~~~~~~~~~~
      ../SharedPubSub.hpp:254:86: warning:   base ‘shps::SharedMemoryManager<long int>’ [-Wreorder]
        254 |         topicName(topicName_),subscriberName(subscriberName_),SharedMemoryManager<T>(){
            |                                                                                      ^
      ../SharedPubSub.hpp:253:9: warning:   when initialized here [-Wreorder]
        253 |         Subscriber(std::string topicName_,std::string subscriberName_,bool doSubscribe = false) :
            |         ^~~~~~~~~~
      ../SharedPubSub.hpp: In instantiation of ‘shps::Publisher<T>::Publisher(std::string) [with T = std::atomic<long int>; std::string = std::__cxx11::basic_string<char>]’:
      /tmp/pip-build-env-bagsv2bh/overlay/lib/python3.13/site-packages/pybind11/include/pybind11/detail/init.h:76:12:   required from ‘Class* pybind11::detail::initimpl::construct_or_initialize(Args&& ...) [with Class = shps::Publisher<std::atomic<long int> >; Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}; typename std::enable_if<std::is_constructible<_Tp, _Args>::value, int>::type <anonymous> = 0]’
         76 |     return new Class(std::forward<Args>(args)...);
            |            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      /tmp/pip-build-env-bagsv2bh/overlay/lib/python3.13/site-packages/pybind11/include/pybind11/detail/init.h:208:70:   required from ‘static void pybind11::detail::initimpl::constructor<Args>::execute(Class&, const Extra& ...) [with Class = pybind11::class_<shps::Publisher<std::atomic<long int> > >; Extra = {}; typename std::enable_if<(! Class::has_alias), int>::type <anonymous> = 0; Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}]’
        208 |                 v_h.value_ptr() = construct_or_initialize<Cpp<Class>>(std::forward<Args>(args)...);
            |                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      /tmp/pip-build-env-bagsv2bh/overlay/lib/python3.13/site-packages/pybind11/include/pybind11/pybind11.h:1659:21:   required from ‘pybind11::class_<type_, options>& pybind11::class_<type_, options>::def(const pybind11::detail::initimpl::constructor<Args ...>&, const Extra& ...) [with Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}; Extra = {}; type_ = shps::Publisher<std::atomic<long int> >; options = {}]’
       1659 |         init.execute(*this, extra...);
            |         ~~~~~~~~~~~~^~~~~~~~~~~~~~~~~
      module.cpp:69:13:   required from ‘void declare_pubsub(pybind11::module_&, const char*, const char*) [with T = std::atomic<long int>]’
         68 |     py::class_<shps::Publisher<T>>(m, pubname)
            |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
         69 |         .def(py::init<const std::string&>())
            |         ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      module.cpp:130:5:   required from here
         94 |     declare_pubsub<atomic<T>>(m, "Publisher_atomic_" name, "Subscriber_atomic_" name);
            |     ~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      ../SharedPubSub.hpp:211:21: warning: ‘shps::Publisher<std::atomic<long int> >::topicName’ will be initialized after [-Wreorder]
        211 |         std::string topicName;
            |                     ^~~~~~~~~
      ../SharedPubSub.hpp:115:56: warning:   base ‘shps::SharedMemoryManager<std::atomic<long int> >’ [-Wreorder]
        115 |         : topicName(topicName_),SharedMemoryManager<T>(){
            |                                                        ^
      ../SharedPubSub.hpp:114:9: warning:   when initialized here [-Wreorder]
        114 |         Publisher(std::string topicName_)
            |         ^~~~~~~~~
      ../SharedPubSub.hpp: In instantiation of ‘shps::Subscriber<T>::Subscriber(std::string, std::string, bool) [with T = std::atomic<long int>; std::string = std::__cxx11::basic_string<char>]’:
      /tmp/pip-build-env-bagsv2bh/overlay/lib/python3.13/site-packages/pybind11/include/pybind11/detail/init.h:76:12:   required from ‘Class* pybind11::detail::initimpl::construct_or_initialize(Args&& ...) [with Class = shps::Subscriber<std::atomic<long int> >; Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool}; typename std::enable_if<std::is_constructible<_Tp, _Args>::value, int>::type <anonymous> = 0]’
         76 |     return new Class(std::forward<Args>(args)...);
            |            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      /tmp/pip-build-env-bagsv2bh/overlay/lib/python3.13/site-packages/pybind11/include/pybind11/detail/init.h:208:70:   required from ‘static void pybind11::detail::initimpl::constructor<Args>::execute(Class&, const Extra& ...) [with Class = pybind11::class_<shps::Subscriber<std::atomic<long int> > >; Extra = {}; typename std::enable_if<(! Class::has_alias), int>::type <anonymous> = 0; Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool}]’
        208 |                 v_h.value_ptr() = construct_or_initialize<Cpp<Class>>(std::forward<Args>(args)...);
            |                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      /tmp/pip-build-env-bagsv2bh/overlay/lib/python3.13/site-packages/pybind11/include/pybind11/pybind11.h:1659:21:   required from ‘pybind11::class_<type_, options>& pybind11::class_<type_, options>::def(const pybind11::detail::initimpl::constructor<Args ...>&, const Extra& ...) [with Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool}; Extra = {}; type_ = shps::Subscriber<std::atomic<long int> >; options = {}]’
       1659 |         init.execute(*this, extra...);
            |         ~~~~~~~~~~~~^~~~~~~~~~~~~~~~~
      module.cpp:81:13:   required from ‘void declare_pubsub(pybind11::module_&, const char*, const char*) [with T = std::atomic<long int>]’
         80 |     py::class_<shps::Subscriber<T>>(m, subname)
            |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
         81 |         .def(py::init<const std::string&, const std::string&, bool>())
            |         ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      module.cpp:130:5:   required from here
         94 |     declare_pubsub<atomic<T>>(m, "Publisher_atomic_" name, "Subscriber_atomic_" name);
            |     ~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      ../SharedPubSub.hpp:336:21: warning: ‘shps::Subscriber<std::atomic<long int> >::subscriberName’ will be initialized after [-Wreorder]
        336 |         std::string subscriberName;
            |                     ^~~~~~~~~~~~~~
      ../SharedPubSub.hpp:254:86: warning:   base ‘shps::SharedMemoryManager<std::atomic<long int> >’ [-Wreorder]
        254 |         topicName(topicName_),subscriberName(subscriberName_),SharedMemoryManager<T>(){
            |                                                                                      ^
      ../SharedPubSub.hpp:253:9: warning:   when initialized here [-Wreorder]
        253 |         Subscriber(std::string topicName_,std::string subscriberName_,bool doSubscribe = false) :
            |         ^~~~~~~~~~
      ../SharedPubSub.hpp: In instantiation of ‘shps::Publisher<T>::Publisher(std::string) [with T = long unsigned int; std::string = std::__cxx11::basic_string<char>]’:
      /tmp/pip-build-env-bagsv2bh/overlay/lib/python3.13/site-packages/pybind11/include/pybind11/detail/init.h:76:12:   required from ‘Class* pybind11::detail::initimpl::construct_or_initialize(Args&& ...) [with Class = shps::Publisher<long unsigned int>; Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}; typename std::enable_if<std::is_constructible<_Tp, _Args>::value, int>::type <anonymous> = 0]’
         76 |     return new Class(std::forward<Args>(args)...);
            |            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      /tmp/pip-build-env-bagsv2bh/overlay/lib/python3.13/site-packages/pybind11/include/pybind11/detail/init.h:208:70:   required from ‘static void pybind11::detail::initimpl::constructor<Args>::execute(Class&, const Extra& ...) [with Class = pybind11::class_<shps::Publisher<long unsigned int> >; Extra = {}; typename std::enable_if<(! Class::has_alias), int>::type <anonymous> = 0; Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}]’
        208 |                 v_h.value_ptr() = construct_or_initialize<Cpp<Class>>(std::forward<Args>(args)...);
            |                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      /tmp/pip-build-env-bagsv2bh/overlay/lib/python3.13/site-packages/pybind11/include/pybind11/pybind11.h:1659:21:   required from ‘pybind11::class_<type_, options>& pybind11::class_<type_, options>::def(const pybind11::detail::initimpl::constructor<Args ...>&, const Extra& ...) [with Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}; Extra = {}; type_ = shps::Publisher<long unsigned int>; options = {}]’
       1659 |         init.execute(*this, extra...);
            |         ~~~~~~~~~~~~^~~~~~~~~~~~~~~~~
      module.cpp:69:13:   required from ‘void declare_pubsub(pybind11::module_&, const char*, const char*) [with T = long unsigned int]’
         68 |     py::class_<shps::Publisher<T>>(m, pubname)
            |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
         69 |         .def(py::init<const std::string&>())
            |         ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      module.cpp:131:5:   required from here
         93 |     declare_pubsub<T>(m, "Publisher_" name, "Subscriber_" name); \
            |     ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      ../SharedPubSub.hpp:211:21: warning: ‘shps::Publisher<long unsigned int>::topicName’ will be initialized after [-Wreorder]
        211 |         std::string topicName;
            |                     ^~~~~~~~~
      ../SharedPubSub.hpp:115:56: warning:   base ‘shps::SharedMemoryManager<long unsigned int>’ [-Wreorder]
        115 |         : topicName(topicName_),SharedMemoryManager<T>(){
            |                                                        ^
      ../SharedPubSub.hpp:114:9: warning:   when initialized here [-Wreorder]
        114 |         Publisher(std::string topicName_)
            |         ^~~~~~~~~
      ../SharedPubSub.hpp: In instantiation of ‘shps::Subscriber<T>::Subscriber(std::string, std::string, bool) [with T = long unsigned int; std::string = std::__cxx11::basic_string<char>]’:
      /tmp/pip-build-env-bagsv2bh/overlay/lib/python3.13/site-packages/pybind11/include/pybind11/detail/init.h:76:12:   required from ‘Class* pybind11::detail::initimpl::construct_or_initialize(Args&& ...) [with Class = shps::Subscriber<long unsigned int>; Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool}; typename std::enable_if<std::is_constructible<_Tp, _Args>::value, int>::type <anonymous> = 0]’
         76 |     return new Class(std::forward<Args>(args)...);
            |            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      /tmp/pip-build-env-bagsv2bh/overlay/lib/python3.13/site-packages/pybind11/include/pybind11/detail/init.h:208:70:   required from ‘static void pybind11::detail::initimpl::constructor<Args>::execute(Class&, const Extra& ...) [with Class = pybind11::class_<shps::Subscriber<long unsigned int> >; Extra = {}; typename std::enable_if<(! Class::has_alias), int>::type <anonymous> = 0; Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool}]’
        208 |                 v_h.value_ptr() = construct_or_initialize<Cpp<Class>>(std::forward<Args>(args)...);
            |                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      /tmp/pip-build-env-bagsv2bh/overlay/lib/python3.13/site-packages/pybind11/include/pybind11/pybind11.h:1659:21:   required from ‘pybind11::class_<type_, options>& pybind11::class_<type_, options>::def(const pybind11::detail::initimpl::constructor<Args ...>&, const Extra& ...) [with Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool}; Extra = {}; type_ = shps::Subscriber<long unsigned int>; options = {}]’
       1659 |         init.execute(*this, extra...);
            |         ~~~~~~~~~~~~^~~~~~~~~~~~~~~~~
      module.cpp:81:13:   required from ‘void declare_pubsub(pybind11::module_&, const char*, const char*) [with T = long unsigned int]’
         80 |     py::class_<shps::Subscriber<T>>(m, subname)
            |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
         81 |         .def(py::init<const std::string&, const std::string&, bool>())
            |         ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      module.cpp:131:5:   required from here
         93 |     declare_pubsub<T>(m, "Publisher_" name, "Subscriber_" name); \
            |     ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      ../SharedPubSub.hpp:336:21: warning: ‘shps::Subscriber<long unsigned int>::subscriberName’ will be initialized after [-Wreorder]
        336 |         std::string subscriberName;
            |                     ^~~~~~~~~~~~~~
      ../SharedPubSub.hpp:254:86: warning:   base ‘shps::SharedMemoryManager<long unsigned int>’ [-Wreorder]
        254 |         topicName(topicName_),subscriberName(subscriberName_),SharedMemoryManager<T>(){
            |                                                                                      ^
      ../SharedPubSub.hpp:253:9: warning:   when initialized here [-Wreorder]
        253 |         Subscriber(std::string topicName_,std::string subscriberName_,bool doSubscribe = false) :
            |         ^~~~~~~~~~
      ../SharedPubSub.hpp: In instantiation of ‘shps::Publisher<T>::Publisher(std::string) [with T = std::atomic<long unsigned int>; std::string = std::__cxx11::basic_string<char>]’:
      /tmp/pip-build-env-bagsv2bh/overlay/lib/python3.13/site-packages/pybind11/include/pybind11/detail/init.h:76:12:   required from ‘Class* pybind11::detail::initimpl::construct_or_initialize(Args&& ...) [with Class = shps::Publisher<std::atomic<long unsigned int> >; Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}; typename std::enable_if<std::is_constructible<_Tp, _Args>::value, int>::type <anonymous> = 0]’
         76 |     return new Class(std::forward<Args>(args)...);
            |            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      /tmp/pip-build-env-bagsv2bh/overlay/lib/python3.13/site-packages/pybind11/include/pybind11/detail/init.h:208:70:   required from ‘static void pybind11::detail::initimpl::constructor<Args>::execute(Class&, const Extra& ...) [with Class = pybind11::class_<shps::Publisher<std::atomic<long unsigned int> > >; Extra = {}; typename std::enable_if<(! Class::has_alias), int>::type <anonymous> = 0; Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}]’
        208 |                 v_h.value_ptr() = construct_or_initialize<Cpp<Class>>(std::forward<Args>(args)...);
            |                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      /tmp/pip-build-env-bagsv2bh/overlay/lib/python3.13/site-packages/pybind11/include/pybind11/pybind11.h:1659:21:   required from ‘pybind11::class_<type_, options>& pybind11::class_<type_, options>::def(const pybind11::detail::initimpl::constructor<Args ...>&, const Extra& ...) [with Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}; Extra = {}; type_ = shps::Publisher<std::atomic<long unsigned int> >; options = {}]’
       1659 |         init.execute(*this, extra...);
            |         ~~~~~~~~~~~~^~~~~~~~~~~~~~~~~
      module.cpp:69:13:   required from ‘void declare_pubsub(pybind11::module_&, const char*, const char*) [with T = std::atomic<long unsigned int>]’
         68 |     py::class_<shps::Publisher<T>>(m, pubname)
            |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
         69 |         .def(py::init<const std::string&>())
            |         ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      module.cpp:131:5:   required from here
         94 |     declare_pubsub<atomic<T>>(m, "Publisher_atomic_" name, "Subscriber_atomic_" name);
            |     ~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      ../SharedPubSub.hpp:211:21: warning: ‘shps::Publisher<std::atomic<long unsigned int> >::topicName’ will be initialized after [-Wreorder]
        211 |         std::string topicName;
            |                     ^~~~~~~~~
      ../SharedPubSub.hpp:115:56: warning:   base ‘shps::SharedMemoryManager<std::atomic<long unsigned int> >’ [-Wreorder]
        115 |         : topicName(topicName_),SharedMemoryManager<T>(){
            |                                                        ^
      ../SharedPubSub.hpp:114:9: warning:   when initialized here [-Wreorder]
        114 |         Publisher(std::string topicName_)
            |         ^~~~~~~~~
      ../SharedPubSub.hpp: In instantiation of ‘shps::Subscriber<T>::Subscriber(std::string, std::string, bool) [with T = std::atomic<long unsigned int>; std::string = std::__cxx11::basic_string<char>]’:
      /tmp/pip-build-env-bagsv2bh/overlay/lib/python3.13/site-packages/pybind11/include/pybind11/detail/init.h:76:12:   required from ‘Class* pybind11::detail::initimpl::construct_or_initialize(Args&& ...) [with Class = shps::Subscriber<std::atomic<long unsigned int> >; Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool}; typename std::enable_if<std::is_constructible<_Tp, _Args>::value, int>::type <anonymous> = 0]’
         76 |     return new Class(std::forward<Args>(args)...);
            |            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      /tmp/pip-build-env-bagsv2bh/overlay/lib/python3.13/site-packages/pybind11/include/pybind11/detail/init.h:208:70:   required from ‘static void pybind11::detail::initimpl::constructor<Args>::execute(Class&, const Extra& ...) [with Class = pybind11::class_<shps::Subscriber<std::atomic<long unsigned int> > >; Extra = {}; typename std::enable_if<(! Class::has_alias), int>::type <anonymous> = 0; Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool}]’
        208 |                 v_h.value_ptr() = construct_or_initialize<Cpp<Class>>(std::forward<Args>(args)...);
            |                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      /tmp/pip-build-env-bagsv2bh/overlay/lib/python3.13/site-packages/pybind11/include/pybind11/pybind11.h:1659:21:   required from ‘pybind11::class_<type_, options>& pybind11::class_<type_, options>::def(const pybind11::detail::initimpl::constructor<Args ...>&, const Extra& ...) [with Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool}; Extra = {}; type_ = shps::Subscriber<std::atomic<long unsigned int> >; options = {}]’
       1659 |         init.execute(*this, extra...);
            |         ~~~~~~~~~~~~^~~~~~~~~~~~~~~~~
      module.cpp:81:13:   required from ‘void declare_pubsub(pybind11::module_&, const char*, const char*) [with T = std::atomic<long unsigned int>]’
         80 |     py::class_<shps::Subscriber<T>>(m, subname)
            |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
         81 |         .def(py::init<const std::string&, const std::string&, bool>())
            |         ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      module.cpp:131:5:   required from here
         94 |     declare_pubsub<atomic<T>>(m, "Publisher_atomic_" name, "Subscriber_atomic_" name);
            |     ~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      ../SharedPubSub.hpp:336:21: warning: ‘shps::Subscriber<std::atomic<long unsigned int> >::subscriberName’ will be initialized after [-Wreorder]
        336 |         std::string subscriberName;
            |                     ^~~~~~~~~~~~~~
      ../SharedPubSub.hpp:254:86: warning:   base ‘shps::SharedMemoryManager<std::atomic<long unsigned int> >’ [-Wreorder]
        254 |         topicName(topicName_),subscriberName(subscriberName_),SharedMemoryManager<T>(){
            |                                                                                      ^
      ../SharedPubSub.hpp:253:9: warning:   when initialized here [-Wreorder]
        253 |         Subscriber(std::string topicName_,std::string subscriberName_,bool doSubscribe = false) :
            |         ^~~~~~~~~~
      ../SharedPubSub.hpp: In instantiation of ‘shps::Publisher<T>::Publisher(std::string) [with T = float; std::string = std::__cxx11::basic_string<char>]’:
      /tmp/pip-build-env-bagsv2bh/overlay/lib/python3.13/site-packages/pybind11/include/pybind11/detail/init.h:76:12:   required from ‘Class* pybind11::detail::initimpl::construct_or_initialize(Args&& ...) [with Class = shps::Publisher<float>; Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}; typename std::enable_if<std::is_constructible<_Tp, _Args>::value, int>::type <anonymous> = 0]’
         76 |     return new Class(std::forward<Args>(args)...);
            |            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      /tmp/pip-build-env-bagsv2bh/overlay/lib/python3.13/site-packages/pybind11/include/pybind11/detail/init.h:208:70:   required from ‘static void pybind11::detail::initimpl::constructor<Args>::execute(Class&, const Extra& ...) [with Class = pybind11::class_<shps::Publisher<float> >; Extra = {}; typename std::enable_if<(! Class::has_alias), int>::type <anonymous> = 0; Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}]’
        208 |                 v_h.value_ptr() = construct_or_initialize<Cpp<Class>>(std::forward<Args>(args)...);
            |                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      /tmp/pip-build-env-bagsv2bh/overlay/lib/python3.13/site-packages/pybind11/include/pybind11/pybind11.h:1659:21:   required from ‘pybind11::class_<type_, options>& pybind11::class_<type_, options>::def(const pybind11::detail::initimpl::constructor<Args ...>&, const Extra& ...) [with Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}; Extra = {}; type_ = shps::Publisher<float>; options = {}]’
       1659 |         init.execute(*this, extra...);
            |         ~~~~~~~~~~~~^~~~~~~~~~~~~~~~~
      module.cpp:69:13:   required from ‘void declare_pubsub(pybind11::module_&, const char*, const char*) [with T = float]’
         68 |     py::class_<shps::Publisher<T>>(m, pubname)
            |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
         69 |         .def(py::init<const std::string&>())
            |         ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      module.cpp:132:5:   required from here
         93 |     declare_pubsub<T>(m, "Publisher_" name, "Subscriber_" name); \
            |     ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      ../SharedPubSub.hpp:211:21: warning: ‘shps::Publisher<float>::topicName’ will be initialized after [-Wreorder]
        211 |         std::string topicName;
            |                     ^~~~~~~~~
      ../SharedPubSub.hpp:115:56: warning:   base ‘shps::SharedMemoryManager<float>’ [-Wreorder]
        115 |         : topicName(topicName_),SharedMemoryManager<T>(){
            |                                                        ^
      ../SharedPubSub.hpp:114:9: warning:   when initialized here [-Wreorder]
        114 |         Publisher(std::string topicName_)
            |         ^~~~~~~~~
      ../SharedPubSub.hpp: In instantiation of ‘shps::Subscriber<T>::Subscriber(std::string, std::string, bool) [with T = float; std::string = std::__cxx11::basic_string<char>]’:
      /tmp/pip-build-env-bagsv2bh/overlay/lib/python3.13/site-packages/pybind11/include/pybind11/detail/init.h:76:12:   required from ‘Class* pybind11::detail::initimpl::construct_or_initialize(Args&& ...) [with Class = shps::Subscriber<float>; Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool}; typename std::enable_if<std::is_constructible<_Tp, _Args>::value, int>::type <anonymous> = 0]’
         76 |     return new Class(std::forward<Args>(args)...);
            |            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      /tmp/pip-build-env-bagsv2bh/overlay/lib/python3.13/site-packages/pybind11/include/pybind11/detail/init.h:208:70:   required from ‘static void pybind11::detail::initimpl::constructor<Args>::execute(Class&, const Extra& ...) [with Class = pybind11::class_<shps::Subscriber<float> >; Extra = {}; typename std::enable_if<(! Class::has_alias), int>::type <anonymous> = 0; Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool}]’
        208 |                 v_h.value_ptr() = construct_or_initialize<Cpp<Class>>(std::forward<Args>(args)...);
            |                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      /tmp/pip-build-env-bagsv2bh/overlay/lib/python3.13/site-packages/pybind11/include/pybind11/pybind11.h:1659:21:   required from ‘pybind11::class_<type_, options>& pybind11::class_<type_, options>::def(const pybind11::detail::initimpl::constructor<Args ...>&, const Extra& ...) [with Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool}; Extra = {}; type_ = shps::Subscriber<float>; options = {}]’
       1659 |         init.execute(*this, extra...);
            |         ~~~~~~~~~~~~^~~~~~~~~~~~~~~~~
      module.cpp:81:13:   required from ‘void declare_pubsub(pybind11::module_&, const char*, const char*) [with T = float]’
         80 |     py::class_<shps::Subscriber<T>>(m, subname)
            |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
         81 |         .def(py::init<const std::string&, const std::string&, bool>())
            |         ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      module.cpp:132:5:   required from here
         93 |     declare_pubsub<T>(m, "Publisher_" name, "Subscriber_" name); \
            |     ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      ../SharedPubSub.hpp:336:21: warning: ‘shps::Subscriber<float>::subscriberName’ will be initialized after [-Wreorder]
        336 |         std::string subscriberName;
            |                     ^~~~~~~~~~~~~~
      ../SharedPubSub.hpp:254:86: warning:   base ‘shps::SharedMemoryManager<float>’ [-Wreorder]
        254 |         topicName(topicName_),subscriberName(subscriberName_),SharedMemoryManager<T>(){
            |                                                                                      ^
      ../SharedPubSub.hpp:253:9: warning:   when initialized here [-Wreorder]
        253 |         Subscriber(std::string topicName_,std::string subscriberName_,bool doSubscribe = false) :
            |         ^~~~~~~~~~
      ../SharedPubSub.hpp: In instantiation of ‘shps::Publisher<T>::Publisher(std::string) [with T = std::atomic<float>; std::string = std::__cxx11::basic_string<char>]’:
      /tmp/pip-build-env-bagsv2bh/overlay/lib/python3.13/site-packages/pybind11/include/pybind11/detail/init.h:76:12:   required from ‘Class* pybind11::detail::initimpl::construct_or_initialize(Args&& ...) [with Class = shps::Publisher<std::atomic<float> >; Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}; typename std::enable_if<std::is_constructible<_Tp, _Args>::value, int>::type <anonymous> = 0]’
         76 |     return new Class(std::forward<Args>(args)...);
            |            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      /tmp/pip-build-env-bagsv2bh/overlay/lib/python3.13/site-packages/pybind11/include/pybind11/detail/init.h:208:70:   required from ‘static void pybind11::detail::initimpl::constructor<Args>::execute(Class&, const Extra& ...) [with Class = pybind11::class_<shps::Publisher<std::atomic<float> > >; Extra = {}; typename std::enable_if<(! Class::has_alias), int>::type <anonymous> = 0; Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}]’
        208 |                 v_h.value_ptr() = construct_or_initialize<Cpp<Class>>(std::forward<Args>(args)...);
            |                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      /tmp/pip-build-env-bagsv2bh/overlay/lib/python3.13/site-packages/pybind11/include/pybind11/pybind11.h:1659:21:   required from ‘pybind11::class_<type_, options>& pybind11::class_<type_, options>::def(const pybind11::detail::initimpl::constructor<Args ...>&, const Extra& ...) [with Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}; Extra = {}; type_ = shps::Publisher<std::atomic<float> >; options = {}]’
       1659 |         init.execute(*this, extra...);
            |         ~~~~~~~~~~~~^~~~~~~~~~~~~~~~~
      module.cpp:69:13:   required from ‘void declare_pubsub(pybind11::module_&, const char*, const char*) [with T = std::atomic<float>]’
         68 |     py::class_<shps::Publisher<T>>(m, pubname)
            |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
         69 |         .def(py::init<const std::string&>())
            |         ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      module.cpp:132:5:   required from here
         94 |     declare_pubsub<atomic<T>>(m, "Publisher_atomic_" name, "Subscriber_atomic_" name);
            |     ~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      ../SharedPubSub.hpp:211:21: warning: ‘shps::Publisher<std::atomic<float> >::topicName’ will be initialized after [-Wreorder]
        211 |         std::string topicName;
            |                     ^~~~~~~~~
      ../SharedPubSub.hpp:115:56: warning:   base ‘shps::SharedMemoryManager<std::atomic<float> >’ [-Wreorder]
        115 |         : topicName(topicName_),SharedMemoryManager<T>(){
            |                                                        ^
      ../SharedPubSub.hpp:114:9: warning:   when initialized here [-Wreorder]
        114 |         Publisher(std::string topicName_)
            |         ^~~~~~~~~
      ../SharedPubSub.hpp: In instantiation of ‘shps::Subscriber<T>::Subscriber(std::string, std::string, bool) [with T = std::atomic<float>; std::string = std::__cxx11::basic_string<char>]’:
      /tmp/pip-build-env-bagsv2bh/overlay/lib/python3.13/site-packages/pybind11/include/pybind11/detail/init.h:76:12:   required from ‘Class* pybind11::detail::initimpl::construct_or_initialize(Args&& ...) [with Class = shps::Subscriber<std::atomic<float> >; Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool}; typename std::enable_if<std::is_constructible<_Tp, _Args>::value, int>::type <anonymous> = 0]’
         76 |     return new Class(std::forward<Args>(args)...);
            |            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      /tmp/pip-build-env-bagsv2bh/overlay/lib/python3.13/site-packages/pybind11/include/pybind11/detail/init.h:208:70:   required from ‘static void pybind11::detail::initimpl::constructor<Args>::execute(Class&, const Extra& ...) [with Class = pybind11::class_<shps::Subscriber<std::atomic<float> > >; Extra = {}; typename std::enable_if<(! Class::has_alias), int>::type <anonymous> = 0; Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool}]’
        208 |                 v_h.value_ptr() = construct_or_initialize<Cpp<Class>>(std::forward<Args>(args)...);
            |                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      /tmp/pip-build-env-bagsv2bh/overlay/lib/python3.13/site-packages/pybind11/include/pybind11/pybind11.h:1659:21:   required from ‘pybind11::class_<type_, options>& pybind11::class_<type_, options>::def(const pybind11::detail::initimpl::constructor<Args ...>&, const Extra& ...) [with Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool}; Extra = {}; type_ = shps::Subscriber<std::atomic<float> >; options = {}]’
       1659 |         init.execute(*this, extra...);
            |         ~~~~~~~~~~~~^~~~~~~~~~~~~~~~~
      module.cpp:81:13:   required from ‘void declare_pubsub(pybind11::module_&, const char*, const char*) [with T = std::atomic<float>]’
         80 |     py::class_<shps::Subscriber<T>>(m, subname)
            |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
         81 |         .def(py::init<const std::string&, const std::string&, bool>())
            |         ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      module.cpp:132:5:   required from here
         94 |     declare_pubsub<atomic<T>>(m, "Publisher_atomic_" name, "Subscriber_atomic_" name);
            |     ~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      ../SharedPubSub.hpp:336:21: warning: ‘shps::Subscriber<std::atomic<float> >::subscriberName’ will be initialized after [-Wreorder]
        336 |         std::string subscriberName;
            |                     ^~~~~~~~~~~~~~
      ../SharedPubSub.hpp:254:86: warning:   base ‘shps::SharedMemoryManager<std::atomic<float> >’ [-Wreorder]
        254 |         topicName(topicName_),subscriberName(subscriberName_),SharedMemoryManager<T>(){
            |                                                                                      ^
      ../SharedPubSub.hpp:253:9: warning:   when initialized here [-Wreorder]
        253 |         Subscriber(std::string topicName_,std::string subscriberName_,bool doSubscribe = false) :
            |         ^~~~~~~~~~
      ../SharedPubSub.hpp: In instantiation of ‘shps::Publisher<T>::Publisher(std::string) [with T = double; std::string = std::__cxx11::basic_string<char>]’:
      /tmp/pip-build-env-bagsv2bh/overlay/lib/python3.13/site-packages/pybind11/include/pybind11/detail/init.h:76:12:   required from ‘Class* pybind11::detail::initimpl::construct_or_initialize(Args&& ...) [with Class = shps::Publisher<double>; Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}; typename std::enable_if<std::is_constructible<_Tp, _Args>::value, int>::type <anonymous> = 0]’
         76 |     return new Class(std::forward<Args>(args)...);
            |            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      /tmp/pip-build-env-bagsv2bh/overlay/lib/python3.13/site-packages/pybind11/include/pybind11/detail/init.h:208:70:   required from ‘static void pybind11::detail::initimpl::constructor<Args>::execute(Class&, const Extra& ...) [with Class = pybind11::class_<shps::Publisher<double> >; Extra = {}; typename std::enable_if<(! Class::has_alias), int>::type <anonymous> = 0; Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}]’
        208 |                 v_h.value_ptr() = construct_or_initialize<Cpp<Class>>(std::forward<Args>(args)...);
            |                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      /tmp/pip-build-env-bagsv2bh/overlay/lib/python3.13/site-packages/pybind11/include/pybind11/pybind11.h:1659:21:   required from ‘pybind11::class_<type_, options>& pybind11::class_<type_, options>::def(const pybind11::detail::initimpl::constructor<Args ...>&, const Extra& ...) [with Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}; Extra = {}; type_ = shps::Publisher<double>; options = {}]’
       1659 |         init.execute(*this, extra...);
            |         ~~~~~~~~~~~~^~~~~~~~~~~~~~~~~
      module.cpp:69:13:   required from ‘void declare_pubsub(pybind11::module_&, const char*, const char*) [with T = double]’
         68 |     py::class_<shps::Publisher<T>>(m, pubname)
            |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
         69 |         .def(py::init<const std::string&>())
            |         ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      module.cpp:133:5:   required from here
         93 |     declare_pubsub<T>(m, "Publisher_" name, "Subscriber_" name); \
            |     ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      ../SharedPubSub.hpp:211:21: warning: ‘shps::Publisher<double>::topicName’ will be initialized after [-Wreorder]
        211 |         std::string topicName;
            |                     ^~~~~~~~~
      ../SharedPubSub.hpp:115:56: warning:   base ‘shps::SharedMemoryManager<double>’ [-Wreorder]
        115 |         : topicName(topicName_),SharedMemoryManager<T>(){
            |                                                        ^
      ../SharedPubSub.hpp:114:9: warning:   when initialized here [-Wreorder]
        114 |         Publisher(std::string topicName_)
            |         ^~~~~~~~~
      ../SharedPubSub.hpp: In instantiation of ‘shps::Subscriber<T>::Subscriber(std::string, std::string, bool) [with T = double; std::string = std::__cxx11::basic_string<char>]’:
      /tmp/pip-build-env-bagsv2bh/overlay/lib/python3.13/site-packages/pybind11/include/pybind11/detail/init.h:76:12:   required from ‘Class* pybind11::detail::initimpl::construct_or_initialize(Args&& ...) [with Class = shps::Subscriber<double>; Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool}; typename std::enable_if<std::is_constructible<_Tp, _Args>::value, int>::type <anonymous> = 0]’
         76 |     return new Class(std::forward<Args>(args)...);
            |            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      /tmp/pip-build-env-bagsv2bh/overlay/lib/python3.13/site-packages/pybind11/include/pybind11/detail/init.h:208:70:   required from ‘static void pybind11::detail::initimpl::constructor<Args>::execute(Class&, const Extra& ...) [with Class = pybind11::class_<shps::Subscriber<double> >; Extra = {}; typename std::enable_if<(! Class::has_alias), int>::type <anonymous> = 0; Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool}]’
        208 |                 v_h.value_ptr() = construct_or_initialize<Cpp<Class>>(std::forward<Args>(args)...);
            |                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      /tmp/pip-build-env-bagsv2bh/overlay/lib/python3.13/site-packages/pybind11/include/pybind11/pybind11.h:1659:21:   required from ‘pybind11::class_<type_, options>& pybind11::class_<type_, options>::def(const pybind11::detail::initimpl::constructor<Args ...>&, const Extra& ...) [with Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool}; Extra = {}; type_ = shps::Subscriber<double>; options = {}]’
       1659 |         init.execute(*this, extra...);
            |         ~~~~~~~~~~~~^~~~~~~~~~~~~~~~~
      module.cpp:81:13:   required from ‘void declare_pubsub(pybind11::module_&, const char*, const char*) [with T = double]’
         80 |     py::class_<shps::Subscriber<T>>(m, subname)
            |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
         81 |         .def(py::init<const std::string&, const std::string&, bool>())
            |         ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      module.cpp:133:5:   required from here
         93 |     declare_pubsub<T>(m, "Publisher_" name, "Subscriber_" name); \
            |     ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      ../SharedPubSub.hpp:336:21: warning: ‘shps::Subscriber<double>::subscriberName’ will be initialized after [-Wreorder]
        336 |         std::string subscriberName;
            |                     ^~~~~~~~~~~~~~
      ../SharedPubSub.hpp:254:86: warning:   base ‘shps::SharedMemoryManager<double>’ [-Wreorder]
        254 |         topicName(topicName_),subscriberName(subscriberName_),SharedMemoryManager<T>(){
            |                                                                                      ^
      ../SharedPubSub.hpp:253:9: warning:   when initialized here [-Wreorder]
        253 |         Subscriber(std::string topicName_,std::string subscriberName_,bool doSubscribe = false) :
            |         ^~~~~~~~~~
      ../SharedPubSub.hpp: In instantiation of ‘shps::Publisher<T>::Publisher(std::string) [with T = std::atomic<double>; std::string = std::__cxx11::basic_string<char>]’:
      /tmp/pip-build-env-bagsv2bh/overlay/lib/python3.13/site-packages/pybind11/include/pybind11/detail/init.h:76:12:   required from ‘Class* pybind11::detail::initimpl::construct_or_initialize(Args&& ...) [with Class = shps::Publisher<std::atomic<double> >; Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}; typename std::enable_if<std::is_constructible<_Tp, _Args>::value, int>::type <anonymous> = 0]’
         76 |     return new Class(std::forward<Args>(args)...);
            |            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      /tmp/pip-build-env-bagsv2bh/overlay/lib/python3.13/site-packages/pybind11/include/pybind11/detail/init.h:208:70:   required from ‘static void pybind11::detail::initimpl::constructor<Args>::execute(Class&, const Extra& ...) [with Class = pybind11::class_<shps::Publisher<std::atomic<double> > >; Extra = {}; typename std::enable_if<(! Class::has_alias), int>::type <anonymous> = 0; Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}]’
        208 |                 v_h.value_ptr() = construct_or_initialize<Cpp<Class>>(std::forward<Args>(args)...);
            |                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      /tmp/pip-build-env-bagsv2bh/overlay/lib/python3.13/site-packages/pybind11/include/pybind11/pybind11.h:1659:21:   required from ‘pybind11::class_<type_, options>& pybind11::class_<type_, options>::def(const pybind11::detail::initimpl::constructor<Args ...>&, const Extra& ...) [with Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}; Extra = {}; type_ = shps::Publisher<std::atomic<double> >; options = {}]’
       1659 |         init.execute(*this, extra...);
            |         ~~~~~~~~~~~~^~~~~~~~~~~~~~~~~
      module.cpp:69:13:   required from ‘void declare_pubsub(pybind11::module_&, const char*, const char*) [with T = std::atomic<double>]’
         68 |     py::class_<shps::Publisher<T>>(m, pubname)
            |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
         69 |         .def(py::init<const std::string&>())
            |         ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      module.cpp:133:5:   required from here
         94 |     declare_pubsub<atomic<T>>(m, "Publisher_atomic_" name, "Subscriber_atomic_" name);
            |     ~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      ../SharedPubSub.hpp:211:21: warning: ‘shps::Publisher<std::atomic<double> >::topicName’ will be initialized after [-Wreorder]
        211 |         std::string topicName;
            |                     ^~~~~~~~~
      ../SharedPubSub.hpp:115:56: warning:   base ‘shps::SharedMemoryManager<std::atomic<double> >’ [-Wreorder]
        115 |         : topicName(topicName_),SharedMemoryManager<T>(){
            |                                                        ^
      ../SharedPubSub.hpp:114:9: warning:   when initialized here [-Wreorder]
        114 |         Publisher(std::string topicName_)
            |         ^~~~~~~~~
      ../SharedPubSub.hpp: In instantiation of ‘shps::Subscriber<T>::Subscriber(std::string, std::string, bool) [with T = std::atomic<double>; std::string = std::__cxx11::basic_string<char>]’:
      /tmp/pip-build-env-bagsv2bh/overlay/lib/python3.13/site-packages/pybind11/include/pybind11/detail/init.h:76:12:   required from ‘Class* pybind11::detail::initimpl::construct_or_initialize(Args&& ...) [with Class = shps::Subscriber<std::atomic<double> >; Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool}; typename std::enable_if<std::is_constructible<_Tp, _Args>::value, int>::type <anonymous> = 0]’
         76 |     return new Class(std::forward<Args>(args)...);
            |            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      /tmp/pip-build-env-bagsv2bh/overlay/lib/python3.13/site-packages/pybind11/include/pybind11/detail/init.h:208:70:   required from ‘static void pybind11::detail::initimpl::constructor<Args>::execute(Class&, const Extra& ...) [with Class = pybind11::class_<shps::Subscriber<std::atomic<double> > >; Extra = {}; typename std::enable_if<(! Class::has_alias), int>::type <anonymous> = 0; Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool}]’
        208 |                 v_h.value_ptr() = construct_or_initialize<Cpp<Class>>(std::forward<Args>(args)...);
            |                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      /tmp/pip-build-env-bagsv2bh/overlay/lib/python3.13/site-packages/pybind11/include/pybind11/pybind11.h:1659:21:   required from ‘pybind11::class_<type_, options>& pybind11::class_<type_, options>::def(const pybind11::detail::initimpl::constructor<Args ...>&, const Extra& ...) [with Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool}; Extra = {}; type_ = shps::Subscriber<std::atomic<double> >; options = {}]’
       1659 |         init.execute(*this, extra...);
            |         ~~~~~~~~~~~~^~~~~~~~~~~~~~~~~
      module.cpp:81:13:   required from ‘void declare_pubsub(pybind11::module_&, const char*, const char*) [with T = std::atomic<double>]’
         80 |     py::class_<shps::Subscriber<T>>(m, subname)
            |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
         81 |         .def(py::init<const std::string&, const std::string&, bool>())
            |         ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      module.cpp:133:5:   required from here
         94 |     declare_pubsub<atomic<T>>(m, "Publisher_atomic_" name, "Subscriber_atomic_" name);
            |     ~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      ../SharedPubSub.hpp:336:21: warning: ‘shps::Subscriber<std::atomic<double> >::subscriberName’ will be initialized after [-Wreorder]
        336 |         std::string subscriberName;
            |                     ^~~~~~~~~~~~~~
      ../SharedPubSub.hpp:254:86: warning:   base ‘shps::SharedMemoryManager<std::atomic<double> >’ [-Wreorder]
        254 |         topicName(topicName_),subscriberName(subscriberName_),SharedMemoryManager<T>(){
            |                                                                                      ^
      ../SharedPubSub.hpp:253:9: warning:   when initialized here [-Wreorder]
        253 |         Subscriber(std::string topicName_,std::string subscriberName_,bool doSubscribe = false) :
            |         ^~~~~~~~~~
      ../SharedPubSub.hpp: In instantiation of ‘shps::Publisher<T>::Publisher(std::string) [with T = FixedString<2048>; std::string = std::__cxx11::basic_string<char>]’:
      /tmp/pip-build-env-bagsv2bh/overlay/lib/python3.13/site-packages/pybind11/include/pybind11/detail/init.h:76:12:   required from ‘Class* pybind11::detail::initimpl::construct_or_initialize(Args&& ...) [with Class = shps::Publisher<FixedString<2048> >; Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}; typename std::enable_if<std::is_constructible<_Tp, _Args>::value, int>::type <anonymous> = 0]’
         76 |     return new Class(std::forward<Args>(args)...);
            |            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      /tmp/pip-build-env-bagsv2bh/overlay/lib/python3.13/site-packages/pybind11/include/pybind11/detail/init.h:208:70:   required from ‘static void pybind11::detail::initimpl::constructor<Args>::execute(Class&, const Extra& ...) [with Class = pybind11::class_<shps::Publisher<FixedString<2048> > >; Extra = {}; typename std::enable_if<(! Class::has_alias), int>::type <anonymous> = 0; Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}]’
        208 |                 v_h.value_ptr() = construct_or_initialize<Cpp<Class>>(std::forward<Args>(args)...);
            |                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      /tmp/pip-build-env-bagsv2bh/overlay/lib/python3.13/site-packages/pybind11/include/pybind11/pybind11.h:1659:21:   required from ‘pybind11::class_<type_, options>& pybind11::class_<type_, options>::def(const pybind11::detail::initimpl::constructor<Args ...>&, const Extra& ...) [with Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}; Extra = {}; type_ = shps::Publisher<FixedString<2048> >; options = {}]’
       1659 |         init.execute(*this, extra...);
            |         ~~~~~~~~~~~~^~~~~~~~~~~~~~~~~
      module.cpp:69:13:   required from ‘void declare_pubsub(pybind11::module_&, const char*, const char*) [with T = FixedString<2048>]’
         68 |     py::class_<shps::Publisher<T>>(m, pubname)
            |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
         69 |         .def(py::init<const std::string&>())
            |         ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      module.cpp:136:38:   required from here
        136 |     declare_pubsub<FixedString<2048>>(m, "Publisher_FixedString2048", "Subscriber_FixedString2048");
            |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      ../SharedPubSub.hpp:211:21: warning: ‘shps::Publisher<FixedString<2048> >::topicName’ will be initialized after [-Wreorder]
        211 |         std::string topicName;
            |                     ^~~~~~~~~
      ../SharedPubSub.hpp:115:56: warning:   base ‘shps::SharedMemoryManager<FixedString<2048> >’ [-Wreorder]
        115 |         : topicName(topicName_),SharedMemoryManager<T>(){
            |                                                        ^
      ../SharedPubSub.hpp:114:9: warning:   when initialized here [-Wreorder]
        114 |         Publisher(std::string topicName_)
            |         ^~~~~~~~~
      ../SharedPubSub.hpp: In instantiation of ‘shps::Subscriber<T>::Subscriber(std::string, std::string, bool) [with T = FixedString<2048>; std::string = std::__cxx11::basic_string<char>]’:
      /tmp/pip-build-env-bagsv2bh/overlay/lib/python3.13/site-packages/pybind11/include/pybind11/detail/init.h:76:12:   required from ‘Class* pybind11::detail::initimpl::construct_or_initialize(Args&& ...) [with Class = shps::Subscriber<FixedString<2048> >; Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool}; typename std::enable_if<std::is_constructible<_Tp, _Args>::value, int>::type <anonymous> = 0]’
         76 |     return new Class(std::forward<Args>(args)...);
            |            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      /tmp/pip-build-env-bagsv2bh/overlay/lib/python3.13/site-packages/pybind11/include/pybind11/detail/init.h:208:70:   required from ‘static void pybind11::detail::initimpl::constructor<Args>::execute(Class&, const Extra& ...) [with Class = pybind11::class_<shps::Subscriber<FixedString<2048> > >; Extra = {}; typename std::enable_if<(! Class::has_alias), int>::type <anonymous> = 0; Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool}]’
        208 |                 v_h.value_ptr() = construct_or_initialize<Cpp<Class>>(std::forward<Args>(args)...);
            |                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      /tmp/pip-build-env-bagsv2bh/overlay/lib/python3.13/site-packages/pybind11/include/pybind11/pybind11.h:1659:21:   required from ‘pybind11::class_<type_, options>& pybind11::class_<type_, options>::def(const pybind11::detail::initimpl::constructor<Args ...>&, const Extra& ...) [with Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool}; Extra = {}; type_ = shps::Subscriber<FixedString<2048> >; options = {}]’
       1659 |         init.execute(*this, extra...);
            |         ~~~~~~~~~~~~^~~~~~~~~~~~~~~~~
      module.cpp:81:13:   required from ‘void declare_pubsub(pybind11::module_&, const char*, const char*) [with T = FixedString<2048>]’
         80 |     py::class_<shps::Subscriber<T>>(m, subname)
            |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
         81 |         .def(py::init<const std::string&, const std::string&, bool>())
            |         ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      module.cpp:136:38:   required from here
        136 |     declare_pubsub<FixedString<2048>>(m, "Publisher_FixedString2048", "Subscriber_FixedString2048");
            |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      ../SharedPubSub.hpp:336:21: warning: ‘shps::Subscriber<FixedString<2048> >::subscriberName’ will be initialized after [-Wreorder]
        336 |         std::string subscriberName;
            |                     ^~~~~~~~~~~~~~
      ../SharedPubSub.hpp:254:86: warning:   base ‘shps::SharedMemoryManager<FixedString<2048> >’ [-Wreorder]
        254 |         topicName(topicName_),subscriberName(subscriberName_),SharedMemoryManager<T>(){
            |                                                                                      ^
      ../SharedPubSub.hpp:253:9: warning:   when initialized here [-Wreorder]
        253 |         Subscriber(std::string topicName_,std::string subscriberName_,bool doSubscribe = false) :
            |         ^~~~~~~~~~
      ../SharedPubSub.hpp: In instantiation of ‘shps::Publisher<T>::Publisher(std::string) [with T = ExampleClass; std::string = std::__cxx11::basic_string<char>]’:
      /tmp/pip-build-env-bagsv2bh/overlay/lib/python3.13/site-packages/pybind11/include/pybind11/detail/init.h:76:12:   required from ‘Class* pybind11::detail::initimpl::construct_or_initialize(Args&& ...) [with Class = shps::Publisher<ExampleClass>; Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}; typename std::enable_if<std::is_constructible<_Tp, _Args>::value, int>::type <anonymous> = 0]’
         76 |     return new Class(std::forward<Args>(args)...);
            |            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      /tmp/pip-build-env-bagsv2bh/overlay/lib/python3.13/site-packages/pybind11/include/pybind11/detail/init.h:208:70:   required from ‘static void pybind11::detail::initimpl::constructor<Args>::execute(Class&, const Extra& ...) [with Class = pybind11::class_<shps::Publisher<ExampleClass> >; Extra = {}; typename std::enable_if<(! Class::has_alias), int>::type <anonymous> = 0; Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}]’
        208 |                 v_h.value_ptr() = construct_or_initialize<Cpp<Class>>(std::forward<Args>(args)...);
            |                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      /tmp/pip-build-env-bagsv2bh/overlay/lib/python3.13/site-packages/pybind11/include/pybind11/pybind11.h:1659:21:   required from ‘pybind11::class_<type_, options>& pybind11::class_<type_, options>::def(const pybind11::detail::initimpl::constructor<Args ...>&, const Extra& ...) [with Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}; Extra = {}; type_ = shps::Publisher<ExampleClass>; options = {}]’
       1659 |         init.execute(*this, extra...);
            |         ~~~~~~~~~~~~^~~~~~~~~~~~~~~~~
      module.cpp:69:13:   required from ‘void declare_pubsub(pybind11::module_&, const char*, const char*) [with T = ExampleClass]’
         68 |     py::class_<shps::Publisher<T>>(m, pubname)
            |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
         69 |         .def(py::init<const std::string&>())
            |         ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      module.cpp:137:33:   required from here
        137 |     declare_pubsub<ExampleClass>(m, "Publisher_ExampleClass", "Subscriber_ExampleClass");
            |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      ../SharedPubSub.hpp:211:21: warning: ‘shps::Publisher<ExampleClass>::topicName’ will be initialized after [-Wreorder]
        211 |         std::string topicName;
            |                     ^~~~~~~~~
      ../SharedPubSub.hpp:115:56: warning:   base ‘shps::SharedMemoryManager<ExampleClass>’ [-Wreorder]
        115 |         : topicName(topicName_),SharedMemoryManager<T>(){
            |                                                        ^
      ../SharedPubSub.hpp:114:9: warning:   when initialized here [-Wreorder]
        114 |         Publisher(std::string topicName_)
            |         ^~~~~~~~~
      ../SharedPubSub.hpp: In instantiation of ‘shps::Subscriber<T>::Subscriber(std::string, std::string, bool) [with T = ExampleClass; std::string = std::__cxx11::basic_string<char>]’:
      /tmp/pip-build-env-bagsv2bh/overlay/lib/python3.13/site-packages/pybind11/include/pybind11/detail/init.h:76:12:   required from ‘Class* pybind11::detail::initimpl::construct_or_initialize(Args&& ...) [with Class = shps::Subscriber<ExampleClass>; Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool}; typename std::enable_if<std::is_constructible<_Tp, _Args>::value, int>::type <anonymous> = 0]’
         76 |     return new Class(std::forward<Args>(args)...);
            |            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      /tmp/pip-build-env-bagsv2bh/overlay/lib/python3.13/site-packages/pybind11/include/pybind11/detail/init.h:208:70:   required from ‘static void pybind11::detail::initimpl::constructor<Args>::execute(Class&, const Extra& ...) [with Class = pybind11::class_<shps::Subscriber<ExampleClass> >; Extra = {}; typename std::enable_if<(! Class::has_alias), int>::type <anonymous> = 0; Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool}]’
        208 |                 v_h.value_ptr() = construct_or_initialize<Cpp<Class>>(std::forward<Args>(args)...);
            |                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      /tmp/pip-build-env-bagsv2bh/overlay/lib/python3.13/site-packages/pybind11/include/pybind11/pybind11.h:1659:21:   required from ‘pybind11::class_<type_, options>& pybind11::class_<type_, options>::def(const pybind11::detail::initimpl::constructor<Args ...>&, const Extra& ...) [with Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool}; Extra = {}; type_ = shps::Subscriber<ExampleClass>; options = {}]’
       1659 |         init.execute(*this, extra...);
            |         ~~~~~~~~~~~~^~~~~~~~~~~~~~~~~
      module.cpp:81:13:   required from ‘void declare_pubsub(pybind11::module_&, const char*, const char*) [with T = ExampleClass]’
         80 |     py::class_<shps::Subscriber<T>>(m, subname)
            |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
         81 |         .def(py::init<const std::string&, const std::string&, bool>())
            |         ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      module.cpp:137:33:   required from here
        137 |     declare_pubsub<ExampleClass>(m, "Publisher_ExampleClass", "Subscriber_ExampleClass");
            |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      ../SharedPubSub.hpp:336:21: warning: ‘shps::Subscriber<ExampleClass>::subscriberName’ will be initialized after [-Wreorder]
        336 |         std::string subscriberName;
            |                     ^~~~~~~~~~~~~~
      ../SharedPubSub.hpp:254:86: warning:   base ‘shps::SharedMemoryManager<ExampleClass>’ [-Wreorder]
        254 |         topicName(topicName_),subscriberName(subscriberName_),SharedMemoryManager<T>(){
            |                                                                                      ^
      ../SharedPubSub.hpp:253:9: warning:   when initialized here [-Wreorder]
        253 |         Subscriber(std::string topicName_,std::string subscriberName_,bool doSubscribe = false) :
            |         ^~~~~~~~~~
      error: command '/usr/bin/x86_64-linux-gnu-g++' failed with exit code 1
      [end of output]
  
  note: This error originates from a subprocess, and is likely not a problem with pip.
  ERROR: Failed building wheel for SharedPubSub
ERROR: Failed to build installable wheels for some pyproject.toml based projects (SharedPubSub)
